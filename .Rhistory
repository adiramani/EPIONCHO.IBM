quantile(test_vec, probs = c(1))
check_1run <- readRDS("C:/Users/mad206/OneDrive/EPIONCHO-IBM changes/HPC/original_model_runs/Outputs/run_1abr173k_e0.2cov0.8.rds")
View(check_1run)
# original model : R package testing #
cov_65_dataframe <- readRDS("C:/Users/mad206/OneDrive/EPIONCHO-IBM changes/HPC/original_model_runs/Outputs/saved_run_prev_means_cov65_Rpkgtest.rds")
View(cov_65_dataframe)
View(cov_65_dataframe)
View(cov_65_dataframe)
x<-c(1977,1977,1988,1988)
y<-c(1,0,1,0)
polygon(x, y, col = "grey")
plot(yrs_tme, output.test$mf_prev, type = 'l', xlab = 'Year', ylab = 'microfilarial prevalence', ylim = c(0, 1), xlim = c(1977,2040), xaxt = "n")
axis(1, at = seq(1977, 2040, by = 1), las=2)
abline(v=1989, col="blue")
abline(v=2024, col="purple")
x<-c(1977,1977,1988,1988)
y<-c(0,1,1,0)
polygon(x, y, col = "grey")
adjustcolor("grey", alpha.f=0.5)
plot(yrs_tme, output.test$mf_prev, type = 'l', xlab = 'Year', ylab = 'microfilarial prevalence', ylim = c(0, 1), xlim = c(1977,2040), xaxt = "n")
axis(1, at = seq(1977, 2040, by = 1), las=2)
abline(v=1989, col="blue")
abline(v=2024, col="purple")
x<-c(1977,1977,1988,1988)
y<-c(0,1,1,0)
adjustcolor("grey", alpha.f=0.5)
polygon(x, y, col = "grey")
plot(yrs_tme, output.test$mf_prev, type = 'l', xlab = 'Year', ylab = 'microfilarial prevalence', ylim = c(0, 1), xlim = c(1977,2040), xaxt = "n")
axis(1, at = seq(1977, 2040, by = 1), las=2)
abline(v=1989, col="blue")
abline(v=2024, col="purple")
x<-c(1977,1977,1988,1988)
y<-c(0,1,1,0)
#adjustcolor("grey", alpha.f=0.5)
polygon(x, y, col = adjustcolor("grey", alpha.f=0.5), border = NA)
mtext("Vector control", side=3, line=1, at=1981, col="green2") # Rotated y axis label
plot(yrs_tme, output.test$mf_prev, type = 'l', xlab = 'Year', ylab = 'microfilarial prevalence', ylim = c(0, 1), xlim = c(1977,2040), xaxt = "n")
axis(1, at = seq(1977, 2040, by = 1), las=2)
abline(v=1989, col="blue")
abline(v=2024, col="purple")
x<-c(1977,1977,1988,1988)
y<-c(0,1,1,0)
#adjustcolor("grey", alpha.f=0.5)
polygon(x, y, col = adjustcolor("grey", alpha.f=0.5), border = NA)
mtext("Vector control", side=3, line=1, at=1981, col="grey") # Rotated y axis label
plot(yrs_tme, output.test$mf_prev, type = 'l', xlab = 'Year', ylab = 'microfilarial prevalence', ylim = c(0, 1), xlim = c(1977,2040), xaxt = "n")
axis(1, at = seq(1977, 2040, by = 1), las=2)
abline(v=1989, col="blue")
abline(v=2024, col="purple")
x<-c(1977,1977,1988,1988)
y<-c(0,1,1,0)
#adjustcolor("grey", alpha.f=0.5)
polygon(x, y, col = adjustcolor("grey", alpha.f=0.5), border = NA)
mtext("Vector control", side=3, line=1, at=1981, col="darkgrey") # Rotated y axis label
mtext("Annual IVM under OCP & National control programme", side=3, line=1, at=2005, col="darkgrey") # Rotated y axis label
mtext("Switch to frequency every 2 years", side=3, line=1, at=2033, col="darkgrey") # Rotated y axis label
devtools::load_all()
output.test <- ep.equi.sim(time.its = timesteps,
ABR = 43540,
N.in = 440,
treat.timing = treat.timing.scenarioA.in,
treat.prob = 0.65,
give.treat = gv.trt,
treat.start = treat.strt,
treat.stop = treat.stp.a,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = yr.start.VC,
vector.control.duration = vc.duration,
vector.control.efficacy = 0.7,
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
kM.const.toggle = TRUE,
run_equilibrium = TRUE,
equilibrium,
print_progress = TRUE)
# ==================================== #
# specify timesteps and model duration #
# simplified intervention history for Benin scenarios :
# vector control & annual ivermectin (1977 – 1988)
# annual ivermectin (1989 – 2022) at coverage of 65% and SNA of 5%
treat.timing.hist.yrs.in <- c(1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023)
no.yrs.MDA.hist <- length(treat.timing.hist.yrs.in)
treat.timing.hist.in <- seq(1, no.yrs.MDA.hist, 1) # make seq from 1 to no.yrs of historical MDA by increments of 1
# for scenario 1: continued annual MDA to 2040 (last round 2039, measure at 2040)
treat.timing.scenarioA.yrs.in <- c(2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
2035, 2036, 2037, 2038, 2039)
no.yrs.MDA.scenarioA <- length(treat.timing.scenarioA.yrs.in)
treat.timing.cont.scenarioA.in <- seq(36, 36 + no.yrs.MDA.scenarioA, 1) # make seq from 36 to 2040 for scenario X
treat.timing.scenarioA.in <- c(treat.timing.hist.in, treat.timing.cont.scenarioA.in) # combine historical & scneario A MDA freq
# for scenario 2: biennial MDA switch from 2024 to 2040 (last round 2039, measure at 2040)
treat.timing.cont.scenarioB.in <- seq(36, 36 + no.yrs.MDA.scenarioA, 2) # make seq from 36 to 2040 for scenario X
treat.timing.scenarioB.in <- c(treat.timing.hist.in, treat.timing.cont.scenarioB.in) # combine historical & scneario A MDA freq
# figure out total years from end of equilibrium run ( from 1989 when MDA begins)
total.no.yrs <- 80 + length(treat.timing.scenarioA.in)
timing.yrs.VC <- c(1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988)
no.yrs.VC <- length(timing.yrs.VC)
yr.start.VC <- 80 - no.yrs.VC
timing.yrs.VC.MDA <- c(1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
2001, 2002)
vc.duration <- length(c(timing.yrs.VC, timing.yrs.VC.MDA))
# ================ #
# INPUTS FOR MODEL #
timesteps = total.no.yrs # should be 132 yrs each scenario
treat.strt = 81;
treat.stp.a = total.no.yrs # run to 2040 (i.e. start at 80yrs + 52 yrs)
treat.stp.b =  total.no.yrs # run to 2040 (i.e. start at 80yrs + 52 yrs) but will bennial freq
treat.stp.c = 81 + length(treat.timing.hist.yrs.in)
gv.trt = 1
# other inputs required to make dataframe for iters #
DT.in <- 1/366 #timestep must be one day
timesteps.iter <- round(total.no.yrs / (DT.in )) #final duration (10 here is 10 years after treatment stops to run model)
#=============================================================================================================== #
#             Setting up runs for different endemic equilibrium prevalence's (ABR x k_E = 0.3 combos)            #
# for model where kM is set to a constant (15) (for kE values of 0.3 and associated DD pars)
abr30 <- 258
abr50 <- 511
#abr60 <- 878
abr70 <- 1730
abr90 <- 43540
abr <- c(abr30, abr50, abr70, abr90)
num_repeats_each_ABR <- 200 # number of times repeat each ABR input
tot_abr <- rep(abr, each = num_repeats_each_ABR) # vector of all ABR values to test
k_e <- 0.3 # 3rd par
tot_k_e <- rep(k_e, each = num_repeats_each_ABR * 4)
inds_reps <- rep(seq(1, num_repeats_each_ABR), length(tot_abr)/num_repeats_each_ABR) # repeating sequence of 1: num repeats, number of combo times
temp_tot_parms <- data.frame(Var1 = tot_abr, Var2 = tot_k_e)
dH0_kE0.3 <- rep(0.186, 800)
dHinf_kE0.3 <- rep(0.003, 800)
cH_kE0.3 <- rep(0.005, 800)
temp_tot_parms$Var3 <- dH0_kE0.3
temp_tot_parms$Var4 <- dHinf_kE0.3
temp_tot_parms$Var5 <- cH_kE0.3
# for parameter df with intervention cov 1
temp_tot_parms1 <- temp_tot_parms
temp_tot_parms1$Var6 <- 0.65 # coverage = 65 %
temp_tot_parms1$Var7 <- 0.05 # SNA = 5%
# for parameter df with intervention cov 2
temp_tot_parms2 <- temp_tot_parms
temp_tot_parms2$Var6 <- 0.8 # coverage = 80%
temp_tot_parms2$Var7 <- 0.01 # SNA = 1%
# recombine into one master dataframe
tot_parms <- rbind(temp_tot_parms1, temp_tot_parms2)
output <- ep.equi.sim(time.its = timesteps,
ABR = abr_to_run,
N.in = 440,
treat.timing = treat.timing.scenarioA.in,
treat.prob = cov_to_run,
give.treat = gv.trt,
treat.start = treat.strt,
treat.stop = treat.stp.a,
pnc = sna_to_run,
min.mont.age = 5,
vector.control.strt = yr.start.VC,
vector.control.duration = vc.duration,
vector.control.efficacy = 0.7,
delta.hz.in = dH0_to_run,
delta.hinf.in = dHinf_to_run,
c.h.in = cH_to_run,
gam.dis.in = k_to_run,
run_equilibrium = TRUE,
equilibrium,
print_progress = TRUE)
devtools::load_all()
output.test <- ep.equi.sim(time.its = timesteps,
ABR = 43540,
N.in = 440,
treat.timing = treat.timing.scenarioA.in,
treat.prob = 0.65,
give.treat = gv.trt,
treat.start = treat.strt,
treat.stop = treat.stp.a,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = yr.start.VC,
vector.control.duration = vc.duration,
=======
run_equilibrium = TRUE,
equilibrium = NA,
print_progress = TRUE)
devtools::load_all()
output_MDA_freqcovVC <- ep.equi.sim(time.its = timesteps,
ABR = ABR.in,
N.in = 440,
treat.timing = treat.timing.in,
treat.prob.variable = treat.prob.variable.in,
give.treat = give.treat.in,
treat.start = treat.strt,
treat.stop = treat.stp,
pnc = 0.05,
min.mont.age = 5,
#vector.control.strt = NA,
vector.control.strt = 30,
vector.control.duration = 10,
>>>>>>> variable_interventions_vectorcontrol
vector.control.efficacy = 0.7,
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
<<<<<<< HEAD
kM.const.toggle = TRUE,
run_equilibrium = TRUE,
equilibrium,
=======
run_equilibrium = TRUE,
equilibrium = NA,
print_progress = TRUE)
devtools::load_all()
output_MDA_freqcovVC <- ep.equi.sim(time.its = timesteps,
ABR = ABR.in,
N.in = 440,
treat.timing = treat.timing.in,
treat.prob.variable = treat.prob.variable.in,
give.treat = give.treat.in,
treat.start = treat.strt,
treat.stop = treat.stp,
pnc = 0.05,
min.mont.age = 5,
#vector.control.strt = NA,
vector.control.strt = 30,
vector.control.duration = 10,
vector.control.efficacy = 0.7,
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
run_equilibrium = TRUE,
equilibrium = NA,
>>>>>>> variable_interventions_vectorcontrol
print_progress = TRUE)
# original model - kM constant#
endemic_prev_vals_list <- readRDS("C:/Users/mad206/OneDrive/EPIONCHO-IBM changes/HPC/original_model_runs/outputs/saved_run_mean_endemicvals_kM_originalmodel.rds") # these are abrs 200 - 1400
abr_vec <- c(200, 300, 500, 750, 1000, 1250, 1500, 1750, 2000, 2500, 3000, 3500, 4000, 4500, 5000,
5500, 6000, 6500, 7000, 7500, 8000, 8500, 9000, 9500, 10000, 10500, 11000, 11500, 12000, 12500,
13000, 13500, 14000)
endemic_prev_vals_df$abr <- abr_vec
# make a dataframe (cols = k_e and rows = abrs)
endemic_prev_vals_df <- lapply(endemic_prev_vals_list, data.frame, stringsAsFactors = FALSE)
endemic_prev_vals_df <- dplyr::bind_rows(endemic_prev_vals_df)
#========================================#
#    if doing abr in blocks              #
# do in this order #
abr_vec <- c(200, 300, 500, 750, 1000, 1250, 1500, 1750, 2000, 2500, 3000, 3500, 4000, 4500, 5000,
5500, 6000, 6500, 7000, 7500, 8000, 8500, 9000, 9500, 10000, 10500, 11000, 11500, 12000, 12500,
13000, 13500, 14000)
endemic_prev_vals_df$abr <- abr_vec
# new dataframe with rbind each k_E to plot as factor (sub-dataframes first)
k_e_0.2_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.2, k_e = as.factor("0.2"))
k_e_0.3_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.3, k_e = as.factor("0.3"))
k_e_0.4_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.4, k_e = as.factor("0.4"))
master_ke_df <- rbind(k_e_0.2_df, k_e_0.3_df, k_e_0.4_df)
master_ke_abr200_14000_df <- master_ke_df
endemic_prev_vals_list <- readRDS("C:/Users/mad206/OneDrive/EPIONCHO-IBM changes/HPC/original_model_runs/outputs/saved_run_mean_endemicvals2_kM_originalmodel.rds") # these are abrs 1450 - 20000
abr_vec <- c(14500, 15000, 15500, 16000, 16500, 17000, 17500, 18000, 18500, 19000, 20000)
endemic_prev_vals_df$abr <- abr_vec
# new dataframe with rbind each k_E to plot as factor (sub-dataframes first)
k_e_0.2_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.2, k_e = as.factor("0.2"))
k_e_0.3_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.3, k_e = as.factor("0.3"))
k_e_0.4_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.4, k_e = as.factor("0.4"))
master_ke_df <- rbind(k_e_0.2_df, k_e_0.3_df, k_e_0.4_df)
master_ke_abr14500_20000_df <- master_ke_df
endemic_prev_vals_list <- readRDS("C:/Users/mad206/OneDrive/EPIONCHO-IBM changes/HPC/original_model_runs/outputs/saved_run_mean_endemicvals3_kM_originalmodel.rds") # these are abrs 22500 - 20000
# make a dataframe (cols = k_e and rows = abrs)
endemic_prev_vals_df <- lapply(endemic_prev_vals_list, data.frame, stringsAsFactors = FALSE)
endemic_prev_vals_df <- dplyr::bind_rows(endemic_prev_vals_df)
abr_vec <- c(22500, 25000, 27500, 30000, 35000, 40000, 45000, 50000, 60000, 70000, 80000,
90000, 100000, 110000, 120000, 125000, 130000, 140000, 150000, 160000,
170000, 175000, 180000, 190000, 200000)
endemic_prev_vals_df$abr <- abr_vec
# new dataframe with rbind each k_E to plot as factor (sub-dataframes first)
k_e_0.2_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.2, k_e = as.factor("0.2"))
k_e_0.3_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.3, k_e = as.factor("0.3"))
k_e_0.4_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.4, k_e = as.factor("0.4"))
master_ke_df <- rbind(k_e_0.2_df, k_e_0.3_df, k_e_0.4_df)
# master_ke_abr200_14000_df <- master_ke_df
# master_ke_abr14500_20000_df <- master_ke_df
master_ke_abr20000_200000_df <- master_ke_df
endemic_prev_vals_list <- readRDS("C:/Users/mad206/OneDrive/EPIONCHO-IBM changes/HPC/original_model_runs/outputs/saved_run_mean_endemicvals4_kM_originalmodel.rds") # these are the lower ones (25 - 180)
# make a dataframe (cols = k_e and rows = abrs)
endemic_prev_vals_df <- lapply(endemic_prev_vals_list, data.frame, stringsAsFactors = FALSE)
endemic_prev_vals_df <- dplyr::bind_rows(endemic_prev_vals_df)
abr_vec <- c(25, 50, 60, 80, 100, 120, 140, 160, 180)
endemic_prev_vals_df$abr <- abr_vec
# new dataframe with rbind each k_E to plot as factor (sub-dataframes first)
k_e_0.2_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.2, k_e = as.factor("0.2"))
k_e_0.3_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.3, k_e = as.factor("0.3"))
k_e_0.4_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.4, k_e = as.factor("0.4"))
master_ke_df <- rbind(k_e_0.2_df, k_e_0.3_df, k_e_0.4_df)
master_ke_abr25_180_df <- master_ke_df
endemic_prev_vals_list <- readRDS("C:/Users/mad206/OneDrive/EPIONCHO-IBM changes/HPC/original_model_runs/outputs/saved_run_mean_endemicvals5_kM_originalmodel.rds") # more data points (125 - 800)
# make a dataframe (cols = k_e and rows = abrs)
endemic_prev_vals_df <- lapply(endemic_prev_vals_list, data.frame, stringsAsFactors = FALSE)
endemic_prev_vals_df <- dplyr::bind_rows(endemic_prev_vals_df)
abr_vec <- c(125, 150, 175, 190, 220, 240, 260, 280, 325, 350, 375, 400, 425, 450, 475,
525, 550, 575, 600, 625, 650, 675, 700, 725, 775, 800) # extended lower range for smoother curve at lower abr - mf prev range
endemic_prev_vals_df$abr <- abr_vec
# new dataframe with rbind each k_E to plot as factor (sub-dataframes first)
k_e_0.2_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.2, k_e = as.factor("0.2"))
k_e_0.3_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.3, k_e = as.factor("0.3"))
k_e_0.4_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.4, k_e = as.factor("0.4"))
master_ke_df <- rbind(k_e_0.2_df, k_e_0.3_df, k_e_0.4_df)
master_ke_abr125_800_df <- master_ke_df
master_ke_abr25_200000_df <- rbind(master_ke_abr25_180_df, master_ke_abr200_14000_df, master_ke_abr125_800_df, master_ke_abr14500_20000_df, master_ke_abr20000_200000_df)
master_ke_kMconst <- master_ke_abr25_200000_df
# including kM constant curve #
master_ke_kMconst$model <- as.factor("original; constant Km (15)")
ggplot(data=master_ke_kMconst, aes(x=abr, y=prev)) +
geom_line(aes(colour = k_e), alpha=0.6, size=1.25)+
geom_point(aes(colour = k_e), alpha=0.75, size=3)+
scale_x_continuous(n.breaks = 20)+
scale_colour_manual(values=c("darkcyan", "brown2", "blue2"))+
theme_bw()+
coord_cartesian(xlim=c(0,2000))
require(ggplot2)
ggplot(data=master_ke_kMconst, aes(x=abr, y=prev)) +
geom_line(aes(colour = k_e), alpha=0.6, size=1.25)+
geom_point(aes(colour = k_e), alpha=0.75, size=3)+
scale_x_continuous(n.breaks = 20)+
scale_colour_manual(values=c("darkcyan", "brown2", "blue2"))+
theme_bw()+
coord_cartesian(xlim=c(0,2000))
master_ke_kMconst_ke0.2 <- master_ke_kMconst[master_ke_kMconst$k_e == 0.2,]
estimate_ke0.2_original_kM <- approxfun(master_ke_kMconst_ke0.2$abr, master_ke_kMconst_ke0.2$prev)
estimate_ke0.2_original_kM(152) # 30% mf prev
estimate_ke0.2_original_kM(493) # 50% mf prev
estimate_ke0.2_original_kM(1300) # 60% mf prev
estimate_ke0.2_original_kM(4563) # 70% mf prev
estimate_ke0.2_original_kM(200000) # 90% mf prev
master_ke_kMconst_ke0.3 <- master_ke_kMconst[master_ke_kMconst$k_e == 0.3,]
estimate_ke0.3_original_kM <- approxfun(master_ke_kMconst_ke0.3$abr, master_ke_kMconst_ke0.3$prev)
estimate_ke0.3_original_kM(258) # 30% mf prev
estimate_ke0.3_original_kM(511) # 50% mf prev
estimate_ke0.3_original_kM(878) # 60% mf prev
estimate_ke0.3_original_kM(1730) # 70% mf prev
estimate_ke0.3_original_kM(25000) # 80% mf prev
estimate_ke0.3_original_kM(43540) # 90% mf prev
estimate_ke0.3_original_kM(10000) # 80% mf prev
estimate_ke0.3_original_kM(8000) # 80% mf prev
estimate_ke0.3_original_kM(7000) # 80% mf prev
estimate_ke0.3_original_kM(4000) # 80% mf prev
estimate_ke0.3_original_kM(5000) # 80% mf prev
estimate_ke0.3_original_kM(5500) # 80% mf prev
estimate_ke0.3_original_kM(5300) # 80% mf prev
estimate_ke0.3_original_kM(5350) # 80% mf prev
estimate_ke0.3_original_kM(5360) # 80% mf prev
estimate_ke0.3_original_kM(5355) # 80% mf prev
estimate_ke0.3_original_kM(5354) # 80% mf prev
estimate_ke0.3_original_kM(5353) # 80% mf prev
estimate_ke0.3_original_kM(5352) # 80% mf prev
estimate_ke0.3_original_kM(43540) # 90% mf prev
master_ke_kMconst_ke0.4 <- master_ke_kMconst[master_ke_kMconst$k_e == 0.4,]
estimate_ke0.4_original_kM <- approxfun(master_ke_kMconst_ke0.4$abr, master_ke_kMconst_ke0.4$prev)
estimate_ke0.4_original_kM(400) # 30% mf prev
estimate_ke0.4_original_kM(630) # 50% mf prev
estimate_ke0.4_original_kM(896) # 60% mf prev
estimate_ke0.4_original_kM(1445) # 70% mf prev
estimate_ke0.4_original_kM(13324) # 90% mf prev
abr80 <- 5353
# abr90 <- 43540
#abr <- c(abr30, abr50, abr70, abr90)
abr <- abr80
num_repeats_each_ABR <- 200 # number of times repeat each ABR input
tot_abr <- rep(abr, each = num_repeats_each_ABR) # vector of all ABR values to test
k_e <- 0.3 # 3rd par
tot_k_e <- rep(k_e, each = num_repeats_each_ABR * 4)
#tot_k_e <- rep(k_e, each = num_repeats_each_ABR * 4)
tot_k_e <- rep(k_e, each = num_repeats_each_ABR)
inds_reps <- rep(seq(1, num_repeats_each_ABR), length(tot_abr)/num_repeats_each_ABR) # repeating sequence of 1: num repeats, number of combo times
dH0_kE0.3 <- rep(0.186, 800)
dHinf_kE0.3 <- rep(0.003, 800)
cH_kE0.3 <- rep(0.005, 800)
temp_tot_parms$Var3 <- dH0_kE0.3
temp_tot_parms <- data.frame(Var1 = tot_abr, Var2 = tot_k_e)
dH0_kE0.3 <- rep(0.186, 800)
dHinf_kE0.3 <- rep(0.003, 800)
cH_kE0.3 <- rep(0.005, 800)
temp_tot_parms$Var3 <- dH0_kE0.3
a
temp_tot_parms <- data.frame(Var1 = tot_abr, Var2 = tot_k_e)
View(temp_tot_parms)
dH0_kE0.3 <- rep(0.186, 200)
dHinf_kE0.3 <- rep(0.003, 200)
cH_kE0.3 <- rep(0.005, 200)
temp_tot_parms$Var3 <- dH0_kE0.3
temp_tot_parms$Var4 <- dHinf_kE0.3
temp_tot_parms$Var5 <- cH_kE0.3
# for parameter df with intervention cov 1
temp_tot_parms1 <- temp_tot_parms
temp_tot_parms1$Var6 <- 0.65 # coverage = 65 %
temp_tot_parms1$Var7 <- 0.05 # SNA = 5%
# for parameter df with intervention cov 2
temp_tot_parms2 <- temp_tot_parms
temp_tot_parms2$Var6 <- 0.8 # coverage = 80%
temp_tot_parms2$Var7 <- 0.01 # SNA = 1%
# recombine into one master dataframe
tot_parms <- rbind(temp_tot_parms1, temp_tot_parms2)
View(tot_parms)
inds_reps2 <- c(inds_reps, inds_reps) # need to multiply number of iterations x 2 (since doing two types intervention sims)
ggplot(data=master_ke_kMconst, aes(x=abr, y=prev)) +
geom_line(aes(colour = k_e), alpha=0.6, size=1.25)+
geom_point(aes(colour = k_e), alpha=0.75, size=3)+
#geom_point(aes(x=434,y=0.3), colour = "black", size = 4, alpha = 0.5)+
#geom_point(aes(x=650,y=0.5), colour = "black", size = 4, alpha = 0.5)+
scale_x_continuous(n.breaks = 20)+
scale_colour_manual(values=c("darkcyan", "brown2", "blue2"))+
scale_y_continuous(limits = c(0,1), breaks = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1))+
theme_bw()+
coord_cartesian(xlim=c(0,150000))
ggplot(data=master_ke_kMconst, aes(x=abr, y=prev)) +
geom_line(aes(colour = k_e), alpha=0.6, size=1.25)+
geom_point(aes(colour = k_e), alpha=0.75, size=3)+
#geom_point(aes(x=434,y=0.3), colour = "black", size = 4, alpha = 0.5)+
#geom_point(aes(x=650,y=0.5), colour = "black", size = 4, alpha = 0.5)+
scale_x_continuous(n.breaks = 20)+
scale_colour_manual(values=c("darkcyan", "brown2", "blue2"))+
scale_y_continuous(limits = c(0,1), breaks = c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1))+
theme_bw()+
coord_cartesian(xlim=c(0,10000))
# original model - kM constant#
endemic_prev_vals_list <- readRDS("C:/Users/mad206/OneDrive/EPIONCHO-IBM changes/HPC/original_model_runs/outputs/saved_run_mean_endemicvals_kM_originalmodel.rds") # these are abrs 200 - 1400
# make a dataframe (cols = k_e and rows = abrs)
endemic_prev_vals_df <- lapply(endemic_prev_vals_list, data.frame, stringsAsFactors = FALSE)
endemic_prev_vals_df <- dplyr::bind_rows(endemic_prev_vals_df)
#========================================#
#    if doing abr in blocks              #
# do in this order #
abr_vec <- c(200, 300, 500, 750, 1000, 1250, 1500, 1750, 2000, 2500, 3000, 3500, 4000, 4500, 5000,
5500, 6000, 6500, 7000, 7500, 8000, 8500, 9000, 9500, 10000, 10500, 11000, 11500, 12000, 12500,
13000, 13500, 14000)
endemic_prev_vals_df$abr <- abr_vec
# new dataframe with rbind each k_E to plot as factor (sub-dataframes first)
k_e_0.2_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.2, k_e = as.factor("0.2"))
k_e_0.3_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.3, k_e = as.factor("0.3"))
k_e_0.4_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.4, k_e = as.factor("0.4"))
master_ke_df <- rbind(k_e_0.2_df, k_e_0.3_df, k_e_0.4_df)
master_ke_abr200_14000_df <- master_ke_df
endemic_prev_vals_list <- readRDS("C:/Users/mad206/OneDrive/EPIONCHO-IBM changes/HPC/original_model_runs/outputs/saved_run_mean_endemicvals2_kM_originalmodel.rds") # these are abrs 1450 - 20000
# make a dataframe (cols = k_e and rows = abrs)
endemic_prev_vals_df <- lapply(endemic_prev_vals_list, data.frame, stringsAsFactors = FALSE)
endemic_prev_vals_df <- dplyr::bind_rows(endemic_prev_vals_df)
abr_vec <- c(14500, 15000, 15500, 16000, 16500, 17000, 17500, 18000, 18500, 19000, 20000)
endemic_prev_vals_df$abr <- abr_vec
# new dataframe with rbind each k_E to plot as factor (sub-dataframes first)
k_e_0.2_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.2, k_e = as.factor("0.2"))
k_e_0.3_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.3, k_e = as.factor("0.3"))
k_e_0.4_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.4, k_e = as.factor("0.4"))
master_ke_df <- rbind(k_e_0.2_df, k_e_0.3_df, k_e_0.4_df)
aster_ke_abr14500_20000_df <- master_ke_df
master_ke_abr14500_20000_df <- master_ke_df
endemic_prev_vals_list <- readRDS("C:/Users/mad206/OneDrive/EPIONCHO-IBM changes/HPC/original_model_runs/outputs/saved_run_mean_endemicvals3_kM_originalmodel.rds") # these are abrs 22500 - 20000
# make a dataframe (cols = k_e and rows = abrs)
endemic_prev_vals_df <- lapply(endemic_prev_vals_list, data.frame, stringsAsFactors = FALSE)
endemic_prev_vals_df <- dplyr::bind_rows(endemic_prev_vals_df)
abr_vec <- c(22500, 25000, 27500, 30000, 35000, 40000, 45000, 50000, 60000, 70000, 80000,
90000, 100000, 110000, 120000, 125000, 130000, 140000, 150000, 160000,
170000, 175000, 180000, 190000, 200000)
endemic_prev_vals_df$abr <- abr_vec
# new dataframe with rbind each k_E to plot as factor (sub-dataframes first)
k_e_0.2_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.2, k_e = as.factor("0.2"))
k_e_0.3_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.3, k_e = as.factor("0.3"))
k_e_0.4_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.4, k_e = as.factor("0.4"))
master_ke_df <- rbind(k_e_0.2_df, k_e_0.3_df, k_e_0.4_df)
master_ke_abr20000_200000_df <- master_ke_df
endemic_prev_vals_list <- readRDS("C:/Users/mad206/OneDrive/EPIONCHO-IBM changes/HPC/original_model_runs/outputs/saved_run_mean_endemicvals4_kM_originalmodel.rds") # these are the lower ones (25 - 180)
# make a dataframe (cols = k_e and rows = abrs)
endemic_prev_vals_df <- lapply(endemic_prev_vals_list, data.frame, stringsAsFactors = FALSE)
endemic_prev_vals_df <- dplyr::bind_rows(endemic_prev_vals_df)
abr_vec <- c(25, 50, 60, 80, 100, 120, 140, 160, 180)
endemic_prev_vals_df$abr <- abr_vec
# new dataframe with rbind each k_E to plot as factor (sub-dataframes first)
k_e_0.2_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.2, k_e = as.factor("0.2"))
k_e_0.3_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.3, k_e = as.factor("0.3"))
k_e_0.4_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.4, k_e = as.factor("0.4"))
master_ke_df <- rbind(k_e_0.2_df, k_e_0.3_df, k_e_0.4_df)
master_ke_abr25_180_df <- master_ke_df
endemic_prev_vals_list <- readRDS("C:/Users/mad206/OneDrive/EPIONCHO-IBM changes/HPC/original_model_runs/outputs/saved_run_mean_endemicvals5_kM_originalmodel.rds") # more data points (125 - 800)
# make a dataframe (cols = k_e and rows = abrs)
endemic_prev_vals_df <- lapply(endemic_prev_vals_list, data.frame, stringsAsFactors = FALSE)
endemic_prev_vals_df <- dplyr::bind_rows(endemic_prev_vals_df)
abr_vec <- c(125, 150, 175, 190, 220, 240, 260, 280, 325, 350, 375, 400, 425, 450, 475,
525, 550, 575, 600, 625, 650, 675, 700, 725, 775, 800) # extended lower range for smoother curve at lower abr - mf prev range
endemic_prev_vals_df$abr <- abr_vec
# new dataframe with rbind each k_E to plot as factor (sub-dataframes first)
k_e_0.2_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.2, k_e = as.factor("0.2"))
k_e_0.3_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.3, k_e = as.factor("0.3"))
k_e_0.4_df <- data.frame(abr = endemic_prev_vals_df$abr, prev = endemic_prev_vals_df$k_E_0.4, k_e = as.factor("0.4"))
master_ke_df <- rbind(k_e_0.2_df, k_e_0.3_df, k_e_0.4_df)
master_ke_abr125_800_df <- master_ke_df
master_ke_abr25_200000_df <- rbind(master_ke_abr25_180_df, master_ke_abr200_14000_df, master_ke_abr125_800_df, master_ke_abr14500_20000_df, master_ke_abr20000_200000_df)
master_ke_kMconst <- master_ke_abr25_200000_df
# original model km constant #
ggplot(data=master_ke_kMconst, aes(x=abr, y=prev)) +
geom_line(aes(colour = k_e), alpha=0.6, size=1.25)+
geom_point(aes(colour = k_e), alpha=0.75, size=3)+
scale_x_continuous(n.breaks = 20)+
scale_colour_manual(values=c("darkcyan", "brown2", "blue2"))+
theme_bw()
master_ke_kMconst_ke0.2 <- master_ke_kMconst[master_ke_kMconst$k_e == 0.2,]
estimate_ke0.2_original_kM <- approxfun(master_ke_kMconst_ke0.2$abr, master_ke_kMconst_ke0.2$prev)
master_ke_kMconst_ke0.3 <- master_ke_kMconst[master_ke_kMconst$k_e == 0.3,]
estimate_ke0.3_original_kM <- approxfun(master_ke_kMconst_ke0.3$abr, master_ke_kMconst_ke0.3$prev)
estimate_ke0.3_original_kM(258) # 30% mf prev
estimate_ke0.3_original_kM(511) # 50% mf prev
estimate_ke0.3_original_kM(878) # 60% mf prev
estimate_ke0.3_original_kM(1730) # 70% mf prev
estimate_ke0.3_original_kM(5353) # 80% mf prev
estimate_ke0.3_original_kM(43540) # 90% mf prev
