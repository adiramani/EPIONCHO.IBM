delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
run_equilibrium = FALSE,
equilibrium = output_equilibrium[[4]],
morbidity_eq = output_equilibrium[[13]],
morbidity_ageprev_eq = output_equilibrium[[10]],
morbidity_prev_eq = morbidity_prev_eq,
print_progress = TRUE,
morbidity_module2 = "YES")
View(morbidity_prev_eq)
debugonce(ep.equi.sim)
output_equilibrium_morbidity2 <- ep.equi.sim(time.its = timesteps,
ABR = ABR.in,
N.in = 440,
treat.int = trt.int,
treat.prob = 0.65,
give.treat = give.treat.in,
treat.start = treat.strt,
treat.stop = treat.stp,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = NA, #
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
run_equilibrium = FALSE,
equilibrium = output_equilibrium[[4]],
morbidity_eq = output_equilibrium[[13]],
morbidity_ageprev_eq = output_equilibrium[[10]],
morbidity_prev_eq = morbidity_prev_eq,
print_progress = TRUE,
morbidity_module2 = "YES")
debugonce(ep.equi.sim)
output_equilibrium_morbidity2 <- ep.equi.sim(time.its = timesteps,
ABR = ABR.in,
N.in = 440,
treat.int = trt.int,
treat.prob = 0.65,
give.treat = give.treat.in,
treat.start = treat.strt,
treat.stop = treat.stp,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = NA, #
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
run_equilibrium = FALSE,
equilibrium = output_equilibrium[[4]],
morbidity_eq = output_equilibrium[[13]],
morbidity_ageprev_eq = output_equilibrium[[10]],
morbidity_prev_eq = morbidity_prev_eq,
print_progress = TRUE,
morbidity_module2 = "YES")
devtools::load_all()
output_equilibrium_morbidity2 <- ep.equi.sim(time.its = timesteps,
ABR = ABR.in,
N.in = 440,
treat.int = trt.int,
treat.prob = 0.65,
give.treat = give.treat.in,
treat.start = treat.strt,
treat.stop = treat.stp,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = NA, #
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
run_equilibrium = FALSE,
equilibrium = output_equilibrium[[4]],
morbidity_eq = output_equilibrium[[13]],
morbidity_ageprev_eq = output_equilibrium[[10]],
morbidity_prev_eq = morbidity_prev_eq,
print_progress = TRUE,
morbidity_module2 = "YES")
names(output_equilibrium_morbidity)
morb.test <- output_equilibrium$morbidity.outputs
View(morb.test)
morb.test <- output_equilibrium$morbidity.outputs[[1]]
View(morb.test)
output_equilibrium[[4]]
morb.test2 <- output_equilibrium[[13]]
View(morb.test2)
output_equilibrium_morbidity2 <- ep.equi.sim(time.its = timesteps,
ABR = ABR.in,
N.in = 440,
treat.int = trt.int,
treat.prob = 0.65,
give.treat = give.treat.in,
treat.start = treat.strt,
treat.stop = treat.stp,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = NA, #
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
run_equilibrium = FALSE,
equilibrium = output_equilibrium[[4]],
morbidity_eq = output_equilibrium[[13]],
morbidity_ageprev_eq = output_equilibrium[[10]],
morbidity_prev_eq = morbidity_prev_eq,
print_progress = TRUE,
morbidity_module2 = "YES")
devtools::load_all()
output_equilibrium_morbidity2 <- ep.equi.sim(time.its = timesteps,
ABR = ABR.in,
N.in = 440,
treat.int = trt.int,
treat.prob = 0.65,
give.treat = give.treat.in,
treat.start = treat.strt,
treat.stop = treat.stp,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = NA, #
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
run_equilibrium = FALSE,
equilibrium = output_equilibrium[[4]],
morbidity_eq = output_equilibrium[[13]],
morbidity_ageprev_eq = output_equilibrium[[10]],
morbidity_prev_eq = morbidity_prev_eq,
print_progress = TRUE,
morbidity_module2 = "YES")
morbidity_ageprev_eq_test <- output_equilibrium[[10]]
View(morbidity_ageprev_eq_test)
morbidity_ageprev_eq_test[[1]]
morbidity_ageprev_eq_test$SI_prev0_1
devtools::load_all()
output_equilibrium_morbidity2 <- ep.equi.sim(time.its = timesteps,
ABR = ABR.in,
N.in = 440,
treat.int = trt.int,
treat.prob = 0.65,
give.treat = give.treat.in,
treat.start = treat.strt,
treat.stop = treat.stp,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = NA, #
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
run_equilibrium = FALSE,
equilibrium = output_equilibrium[[4]],
morbidity_eq = output_equilibrium[[13]],
morbidity_ageprev_eq = output_equilibrium[[10]],
morbidity_prev_eq = morbidity_prev_eq,
print_progress = TRUE,
morbidity_module2 = "YES",
mf_ageprev_eq = output_equilibrium[[14]],
mf_agintens_eq = output_equilibrium[[15]])
devtools::load_all()
output_equilibrium_morbidity2 <- ep.equi.sim(time.its = timesteps,
ABR = ABR.in,
N.in = 440,
treat.int = trt.int,
treat.prob = 0.65,
give.treat = give.treat.in,
treat.start = treat.strt,
treat.stop = treat.stp,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = NA, #
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
run_equilibrium = FALSE,
equilibrium = output_equilibrium[[4]],
morbidity_eq = output_equilibrium[[13]],
morbidity_ageprev_eq = output_equilibrium[[10]],
morbidity_prev_eq = morbidity_prev_eq,
print_progress = TRUE,
morbidity_module2 = "YES",
mf_ageprev_eq = output_equilibrium[[14]],
mf_agintens_eq = output_equilibrium[[15]])
library(haven)
murdoch_data <- read_dta('C:/Users/mad206/OneDrive/EPIONCH-IBM BoD/Skin disease/Murdoch data/pntd.0005489.s001 (1).dta')
murdoch_data2 <- murdoch_data[!is.na(murdoch_data$mfbin),]
library(dplyr)
library(haven)
murdoch_data <- read_dta('C:/Users/mad206/OneDrive/EPIONCH-IBM BoD/Skin disease/Murdoch data/pntd.0005489.s001 (1).dta')
murdoch_data2 <- murdoch_data[!is.na(murdoch_data$mfbin),]
library(dplyr)
library(haven)
murdoch_data <- read_dta('C:/Users/mad206/OneDrive/EPIONCH-IBM BoD/Skin disease/Murdoch data/pntd.0005489.s001 (1).dta')
murdoch_data2 <- murdoch_data[!is.na(murdoch_data$mfbin),]
library(dplyr)
library(binom)
murdoch_data2 <- murdoch_data2 %>%
mutate(
#create categories
age_cat = dplyr::case_when(
age >= 0 & age < 2 ~ "0 - 1",
age >= 2 & age < 5 ~ "2 - 4",
age >= 5 & age < 10 ~ "5 - 9",
age >= 10 & age < 20 ~ "10 - 19",
age >= 20 & age < 30 ~ "20 - 29",
age >= 30 & age < 50 ~ "30 - 49",
age >= 50 & age <= 80 ~ "50 - 80",
age > 80 ~ "> 80"
),
# convert to factor
age_cat = factor(
age_cat,
level = c("0 - 1","2 - 4", "5 - 9", "10 - 19", "20 - 29", "30 - 49", "50 - 80", "> 80")
)
)
murdoch_data2_endemic <- subset(murdoch_data2, mesonon == 1)
murdoch_data2_nonendemic <- subset(murdoch_data2, mesonon == 0)
atrp_age_prop <- murdoch_data2_endemic %>%
group_by(age_cat) %>%
summarise(x = sum(atrophy),
n = n(),
prop = sum(atrophy)/n())
atrp_age_prop_nonend <- murdoch_data2_nonendemic %>%
group_by(age_cat) %>%
summarise(x_nend = sum(atrophy),
n_nend = n(),
prop_nend = sum(atrophy)/n())
atrp_df <- data.frame(age_cat = atrp_age_prop$age_cat, x_nend = atrp_age_prop_nonend$x_nend, n_nend = atrp_age_prop_nonend$n_nend,
prop_nend = atrp_age_prop_nonend$prop_nend, x = atrp_age_prop$x, n = atrp_age_prop$n, prop = atrp_age_prop$prop)
atrp_df$adj_prop <- atrp_df$prop - atrp_df$prop_nend
atrp_df$adj_prop <- ifelse(atrp_df$adj_prop < 0, 0, atrp_df$adj_prop)
atrp_df$x_adj <- atrp_df$n * atrp_df$adj_prop
atrp_df$x_adj_rnd <- round(atrp_df$x_adj)
atrp_CI <- binom.confint(x = atrp_df$x_adj_rnd, n = atrp_df$n, conf.level = 0.95, methods = "exact")
atrp_df$lower <- atrp_CI$lower
atrp_df$upper <- atrp_CI$upper
atrp_df$prop_check <- atrp_CI$mean
atrp_df$sequela <- as.factor("atrophy")
# remove > 50 yrs categories
# =========== #
# severe itch #
#meso <- subset(murdoch_data2, atrophy == 1 & age < 50 & mesonon == 1)
# atrp_age_prop_test <- murdoch_data2_endemic %>%
#   group_by(atrophy, age_cat) %>%
#   summarise(n = n()) %>%
#   mutate(freq = n / sum(n))
SI_age_prop <- murdoch_data2_endemic %>%
group_by(age_cat) %>%
summarise(x = sum(itching),
n = n(),
prop = sum(itching)/n())
SI_age_prop_nonend <- murdoch_data2_nonendemic %>%
group_by(age_cat) %>%
summarise(x_nend = sum(itching),
n_nend = n(),
prop_nend = sum(itching)/n())
SI_df <- data.frame(age_cat = SI_age_prop$age_cat, x_nend = SI_age_prop_nonend$x_nend, n_nend = SI_age_prop_nonend$n_nend,
prop_nend = SI_age_prop_nonend$prop_nend, x = SI_age_prop$x, n = SI_age_prop$n, prop = SI_age_prop$prop)
SI_df$adj_prop <- SI_df$prop - SI_df$prop_nend
SI_df$adj_prop <- ifelse(SI_df$adj_prop < 0, 0, SI_df$adj_prop)
SI_df$x_adj <- SI_df$n * SI_df$adj_prop
SI_df$x_adj_rnd <- round(SI_df$x_adj)
SI_CI <- binom.confint(x = SI_df$x_adj_rnd, n = SI_df$n, conf.level = 0.95, methods = "exact")
SI_df$lower <- SI_CI$lower
SI_df$upper <- SI_CI$upper
SI_df$prop_check <- SI_CI$mean
SI_df$sequela <- as.factor("severe itching")
# =========== #
# APOD       #
#meso <- subset(murdoch_data2, atrophy == 1 & age < 50 & mesonon == 1)
# atrp_age_prop_test <- murdoch_data2_endemic %>%
#   group_by(atrophy, age_cat) %>%
#   summarise(n = n()) %>%
#   mutate(freq = n / sum(n))
APOD_age_prop <- murdoch_data2_endemic %>%
group_by(age_cat) %>%
summarise(x = sum(apod),
n = n(),
prop = sum(apod)/n())
APOD_age_prop_nonend <- murdoch_data2_nonendemic %>%
group_by(age_cat) %>%
summarise(x_nend = sum(apod),
n_nend = n(),
prop_nend = sum(apod)/n())
APOD_df <- data.frame(age_cat = APOD_age_prop$age_cat, x_nend = APOD_age_prop_nonend$x_nend, n_nend = APOD_age_prop_nonend$n_nend,
prop_nend = APOD_age_prop_nonend$prop_nend, x = APOD_age_prop$x, n = APOD_age_prop$n, prop = APOD_age_prop$prop)
APOD_df$adj_prop <- APOD_df$prop - APOD_df$prop_nend
APOD_df$adj_prop <- ifelse(APOD_df$adj_prop < 0, 0, APOD_df$adj_prop)
APOD_df$x_adj <- APOD_df$n * APOD_df$adj_prop
APOD_df$x_adj_rnd <- round(APOD_df$x_adj)
APOD_CI <- binom.confint(x = APOD_df$x_adj_rnd, n = APOD_df$n, conf.level = 0.95, methods = "exact")
APOD_df$lower <- APOD_CI$lower
APOD_df$upper <- APOD_CI$upper
APOD_df$prop_check <- APOD_CI$mean
#APOD_df$sequela1 <- as.factor("APOD")
APOD_df$sequela <- as.factor("RSD")
# =========== #
# CPOD       #
#meso <- subset(murdoch_data2, atrophy == 1 & age < 50 & mesonon == 1)
# atrp_age_prop_test <- murdoch_data2_endemic %>%
#   group_by(atrophy, age_cat) %>%
#   summarise(n = n()) %>%
#   mutate(freq = n / sum(n))
CPOD_age_prop <- murdoch_data2_endemic %>%
group_by(age_cat) %>%
summarise(x = sum(cpod),
n = n(),
prop = sum(cpod)/n())
CPOD_age_prop_nonend <- murdoch_data2_nonendemic %>%
group_by(age_cat) %>%
summarise(x_nend = sum(cpod),
n_nend = n(),
prop_nend = sum(cpod)/n())
CPOD_df <- data.frame(age_cat = CPOD_age_prop$age_cat, x_nend = CPOD_age_prop_nonend$x_nend, n_nend = CPOD_age_prop_nonend$n_nend,
prop_nend = CPOD_age_prop_nonend$prop_nend, x = CPOD_age_prop$x, n = CPOD_age_prop$n, prop = CPOD_age_prop$prop)
CPOD_df$adj_prop <- CPOD_df$prop - CPOD_df$prop_nend
CPOD_df$adj_prop <- ifelse(CPOD_df$adj_prop < 0, 0, CPOD_df$adj_prop)
CPOD_df$x_adj <- CPOD_df$n * CPOD_df$adj_prop
CPOD_df$x_adj_rnd <- round(CPOD_df$x_adj)
CPOD_CI <- binom.confint(x = CPOD_df$x_adj_rnd, n = CPOD_df$n, conf.level = 0.95, methods = "exact")
CPOD_df$lower <- CPOD_CI$lower
CPOD_df$upper <- CPOD_CI$upper
CPOD_df$prop_check <- CPOD_CI$mean
#CPOD_df$sequela1 <- as.factor("CPOD")
CPOD_df$sequela <- as.factor("RSD")
# =========== #
#   LOD       #
#meso <- subset(murdoch_data2, atrophy == 1 & age < 50 & mesonon == 1)
# atrp_age_prop_test <- murdoch_data2_endemic %>%
#   group_by(atrophy, age_cat) %>%
#   summarise(n = n()) %>%
#   mutate(freq = n / sum(n))
LOD_age_prop <- murdoch_data2_endemic %>%
group_by(age_cat) %>%
summarise(x = sum(lod),
n = n(),
prop = sum(lod)/n())
LOD_age_prop_nonend <- murdoch_data2_nonendemic %>%
group_by(age_cat) %>%
summarise(x_nend = sum(lod),
n_nend = n(),
prop_nend = sum(lod)/n())
LOD_df <- data.frame(age_cat = LOD_age_prop$age_cat, x_nend = LOD_age_prop_nonend$x_nend, n_nend = LOD_age_prop_nonend$n_nend,
prop_nend = LOD_age_prop_nonend$prop_nend, x = LOD_age_prop$x, n = LOD_age_prop$n, prop = LOD_age_prop$prop)
LOD_df$adj_prop <- LOD_df$prop - LOD_df$prop_nend
LOD_df$adj_prop <- ifelse(LOD_df$adj_prop < 0, 0, LOD_df$adj_prop)
LOD_df$x_adj <- LOD_df$n * LOD_df$adj_prop
LOD_df$x_adj_rnd <- round(LOD_df$x_adj)
LOD_CI <- binom.confint(x = LOD_df$x_adj_rnd, n = LOD_df$n, conf.level = 0.95, methods = "exact")
LOD_df$lower <- LOD_CI$lower
LOD_df$upper <- LOD_CI$upper
LOD_df$prop_check <- LOD_CI$mean
#LOD_df$sequela1 <- as.factor("LOD")
LOD_df$sequela <- as.factor("RSD")
# =========== #
#   RSD       #
#meso <- subset(murdoch_data2, atrophy == 1 & age < 50 & mesonon == 1)
# atrp_age_prop_test <- murdoch_data2_endemic %>%
#   group_by(atrophy, age_cat) %>%
#   summarise(n = n()) %>%
#   mutate(freq = n / sum(n))
murdoch_data2_endemic$rsd <- ifelse(murdoch_data2_endemic$apod == 1 | murdoch_data2_endemic$cpod == 1 | murdoch_data2_endemic$lod == 1, 1, 0)
murdoch_data2_nonendemic$rsd <- ifelse(murdoch_data2_nonendemic$apod == 1 | murdoch_data2_nonendemic$cpod == 1 | murdoch_data2_nonendemic$lod == 1, 1, 0)
RSD_age_prop <- murdoch_data2_endemic %>%
group_by(age_cat) %>%
summarise(x = sum(rsd),
n = n(),
prop = sum(rsd)/n())
RSD_age_prop_nonend <- murdoch_data2_nonendemic %>%
group_by(age_cat) %>%
summarise(x_nend = sum(rsd),
n_nend = n(),
prop_nend = sum(rsd)/n())
RSD_df <- data.frame(age_cat = RSD_age_prop$age_cat, x_nend = RSD_age_prop_nonend$x_nend, n_nend = RSD_age_prop_nonend$n_nend,
prop_nend = RSD_age_prop_nonend$prop_nend, x = RSD_age_prop$x, n = RSD_age_prop$n, prop = RSD_age_prop$prop)
RSD_df$adj_prop <- RSD_df$prop - RSD_df$prop_nend
RSD_df$adj_prop <- ifelse(RSD_df$adj_prop < 0, 0, RSD_df$adj_prop)
RSD_df$x_adj <- RSD_df$n * RSD_df$adj_prop
RSD_df$x_adj_rnd <- round(RSD_df$x_adj)
RSD_CI <- binom.confint(x = RSD_df$x_adj_rnd, n = RSD_df$n, conf.level = 0.95, methods = "exact")
RSD_df$lower <- RSD_CI$lower
RSD_df$upper <- RSD_CI$upper
RSD_df$prop_check <- RSD_CI$mean
RSD_df$sequela <- as.factor("RSD")
# ===================== #
#   hanging groin       #
#meso <- subset(murdoch_data2, atrophy == 1 & age < 50 & mesonon == 1)
# atrp_age_prop_test <- murdoch_data2_endemic %>%
#   group_by(atrophy, age_cat) %>%
#   summarise(n = n()) %>%
#   mutate(freq = n / sum(n))
HG_age_prop <- murdoch_data2_endemic %>%
group_by(age_cat) %>%
summarise(x = sum(hanggroin),
n = n(),
prop = sum(hanggroin)/n())
HG_age_prop_nonend <- murdoch_data2_nonendemic %>%
group_by(age_cat) %>%
summarise(x_nend = sum(hanggroin),
n_nend = n(),
prop_nend = sum(hanggroin)/n())
HG_df <- data.frame(age_cat = HG_age_prop$age_cat, x_nend = HG_age_prop_nonend$x_nend, n_nend = HG_age_prop_nonend$n_nend,
prop_nend = HG_age_prop_nonend$prop_nend, x = HG_age_prop$x, n = HG_age_prop$n, prop = HG_age_prop$prop)
HG_df$adj_prop <- HG_df$prop - HG_df$prop_nend
HG_df$adj_prop <- ifelse(HG_df$adj_prop < 0, 0, HG_df$adj_prop)
HG_df$x_adj <- HG_df$n * HG_df$adj_prop
HG_df$x_adj_rnd <- round(HG_df$x_adj)
HG_CI <- binom.confint(x = HG_df$x_adj_rnd, n = HG_df$n, conf.level = 0.95, methods = "exact")
HG_df$lower <- HG_CI$lower
HG_df$upper <- HG_CI$upper
HG_df$prop_check <- HG_CI$mean
HG_df$sequela <- as.factor("hanging groin")
# ===================== #
#   depigmentation      #
#meso <- subset(murdoch_data2, atrophy == 1 & age < 50 & mesonon == 1)
# atrp_age_prop_test <- murdoch_data2_endemic %>%
#   group_by(atrophy, age_cat) %>%
#   summarise(n = n()) %>%
#   mutate(freq = n / sum(n))
depigm_age_prop <- murdoch_data2_endemic %>%
group_by(age_cat) %>%
summarise(x = sum(hypo),
n = n(),
prop = sum(hypo)/n())
depigm_age_prop_nonend <- murdoch_data2_nonendemic %>%
group_by(age_cat) %>%
summarise(x_nend = sum(hypo),
n_nend = n(),
prop_nend = sum(hypo)/n())
depigm_df <- data.frame(age_cat = depigm_age_prop$age_cat, x_nend = depigm_age_prop_nonend$x_nend, n_nend = depigm_age_prop_nonend$n_nend,
prop_nend = depigm_age_prop_nonend$prop_nend, x = depigm_age_prop$x, n = depigm_age_prop$n, prop = depigm_age_prop$prop)
depigm_df$adj_prop <- depigm_df$prop - depigm_df$prop_nend
depigm_df$adj_prop <- ifelse(depigm_df$adj_prop < 0, 0, depigm_df$adj_prop)
depigm_df$x_adj <- depigm_df$n * depigm_df$adj_prop
depigm_df$x_adj_rnd <- round(depigm_df$x_adj)
depigm_CI <- binom.confint(x = depigm_df$x_adj_rnd, n = depigm_df$n, conf.level = 0.95, methods = "exact")
depigm_df$lower <- depigm_CI$lower
depigm_df$upper <- depigm_CI$upper
depigm_df$prop_check <- depigm_CI$mean
depigm_df$sequela <- as.factor("depigmentation")
sequela_df_ageprev <- rbind(SI_df, RSD_df, atrp_df, HG_df, depigm_df)
sequela_df_ageprev_subset <- subset(sequela_df_ageprev, age_cat != "> 80")
APOD_df1 <- subset(APOD_df, age_cat != "> 80")
CPOD_df1 <- subset(CPOD_df, age_cat != "> 80")
LOD_df1 <- subset(LOD_df, age_cat != "> 80")
require(ggplot2)
base_plot <- ggplot(data = sequela_df_ageprev_subset, aes(x = age_cat, y = adj_prop*100, group = sequela))+
geom_line()+
geom_point()+
geom_errorbar(aes(ymin=lower*100, ymax=upper*100), width = 0.2)+
facet_wrap(~sequela)+
theme_bw()
base_plot_APOD <- base_plot +
geom_line(data = APOD_df1, aes(x = age_cat, y = adj_prop*100, group = sequela), colour = "brown", alpha = 0.5)+
geom_point(data = APOD_df1, aes(x = age_cat, y = adj_prop*100, group = sequela), colour = "brown", alpha = 0.5)+
geom_errorbar(data = APOD_df1, aes(ymin=lower*100, ymax=upper*100), width = 0.2, colour = "brown", alpha = 0.5)+
facet_wrap(~sequela)
base_plot_CPOD <- base_plot_APOD +
geom_line(data = CPOD_df1, aes(x = age_cat, y = adj_prop*100, group = sequela), colour = "purple", alpha = 0.5)+
geom_point(data = CPOD_df1, aes(x = age_cat, y = adj_prop*100, group = sequela), colour = "purple", alpha = 0.5)+
geom_errorbar(data = CPOD_df1, aes(ymin=lower*100, ymax=upper*100), width = 0.2, colour = "purple", alpha = 0.5)+
facet_wrap(~sequela)
base_plot_CPOD +
geom_line(data = LOD_df1, aes(x = age_cat, y = adj_prop*100, group = sequela), colour = "orange", alpha = 0.5)+
geom_point(data = LOD_df1, aes(x = age_cat, y = adj_prop*100, group = sequela), colour = "orange", alpha = 0.5)+
geom_errorbar(data = LOD_df1, aes(ymin=lower*100, ymax=upper*100), width = 0.2, colour = "orange", alpha = 0.5)+
ylab("Adjusted prevalence (%)")+
xlab("Age categories (years)")+
facet_wrap(~sequela)
timesteps = 100 # should be 132 yrs each scenario
treat.strt = 0;
#treat.stp.a = total.no.yrs # run to 2040 (i.e. start at 80yrs + 52 yrs)
#treat.stp.b =  total.no.yrs # run to 2040 (i.e. start at 80yrs + 52 yrs) but will bennial freq
#treat.stp.c = 81 + length(treat.timing.hist.yrs.in)
gv.trt = 1
# other inputs required to make dataframe for iters #
DT.in <- 1/366 #timestep must be one day
timesteps = 100 # should be 132 yrs each scenario
treat.strt = 0;
#treat.stp.a = total.no.yrs # run to 2040 (i.e. start at 80yrs + 52 yrs)
#treat.stp.b =  total.no.yrs # run to 2040 (i.e. start at 80yrs + 52 yrs) but will bennial freq
#treat.stp.c = 81 + length(treat.timing.hist.yrs.in)
gv.trt = 1
# other inputs required to make dataframe for iters #
DT.in <- 1/366 #timestep must be one day
# timesteps.iter <- round(total.no.yrs / (DT.in )) #final duration (10 here is 10 years after treatment stops to run model)
# for model where kM is set to a constant (15) (for kE values of 0.3 and associated DD pars)
abr30 = 294 # 30% mf prev
#abr <- c(abr50, abr60, abr70, abr80, abr_ches)
# abr <- abr60
abr <- abr30
num_repeats_each_ABR <- 500 # number of times repeat each ABR input
tot_abr <- rep(abr, each = num_repeats_each_ABR) # vector of all ABR values to test
k_e <- 0.3 # 3rd par
#tot_k_e <- rep(k_e, each = num_repeats_each_ABR * 5)
tot_k_e <- rep(k_e, each = num_repeats_each_ABR)
inds_reps <- rep(seq(1, num_repeats_each_ABR), length(tot_abr)/num_repeats_each_ABR) # repeating sequence of 1: num repeats, number of combo times
temp_tot_parms <- data.frame(Var1 = tot_abr, Var2 = tot_k_e)
dH0_kE0.3 <- rep(0.186, 500)
dHinf_kE0.3 <- rep(0.003, 500)
cH_kE0.3 <- rep(0.005, 500)
temp_tot_parms$Var3 <- dH0_kE0.3
temp_tot_parms$Var4 <- dHinf_kE0.3
temp_tot_parms$Var5 <- cH_kE0.3
# recombine into one master dataframe
#tot_parms <- rbind(temp_tot_parms1, temp_tot_parms2)
tot_parms <- temp_tot_parms
