equilibrium,
print_progress = TRUE)
devtools::load_all()
debugonce(ep.equi.sim)
output.test <- ep.equi.sim(time.its = timesteps,
ABR = 43540,
N.in = 440,
treat.timing = treat.timing.scenarioB.in,
treat.prob = 0.65,
give.treat = gv.trt,
treat.start = treat.strt,
treat.stop = treat.stp.b,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = yr.start.VC,
vector.control.duration = vc.duration,
vector.control.efficacy = 0.7,
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
run_equilibrium = TRUE,
equilibrium,
print_progress = TRUE)
devtools::load_all()
debugonce(ep.equi.sim)
output.test <- ep.equi.sim(time.its = timesteps,
ABR = 43540,
N.in = 440,
treat.timing = treat.timing.scenarioB.in,
treat.prob = 0.65,
give.treat = gv.trt,
treat.start = treat.strt,
treat.stop = treat.stp.b,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = yr.start.VC,
vector.control.duration = vc.duration,
vector.control.efficacy = 0.7,
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
run_equilibrium = TRUE,
equilibrium,
print_progress = TRUE)
devtools::load_all()
debugonce(ep.equi.sim)
output.test <- ep.equi.sim(time.its = timesteps,
ABR = 43540,
N.in = 440,
treat.timing = treat.timing.scenarioB.in,
treat.prob = 0.65,
give.treat = gv.trt,
treat.start = treat.strt,
treat.stop = treat.stp.b,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = yr.start.VC,
vector.control.duration = vc.duration,
vector.control.efficacy = 0.7,
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
run_equilibrium = TRUE,
equilibrium,
print_progress = TRUE)
devtools::load_all()
debugonce(ep.equi.sim)
output.test <- ep.equi.sim(time.its = timesteps,
ABR = 43540,
N.in = 440,
treat.timing = treat.timing.scenarioB.in,
treat.prob = 0.65,
give.treat = gv.trt,
treat.start = treat.strt,
treat.stop = treat.stp.b,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = yr.start.VC,
vector.control.duration = vc.duration,
vector.control.efficacy = 0.7,
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
run_equilibrium = TRUE,
equilibrium,
print_progress = TRUE)
debugonce(ep.equi.sim)
output.test <- ep.equi.sim(time.its = timesteps,
ABR = 43540,
N.in = 440,
treat.timing = treat.timing.scenarioB.in,
treat.prob = 0.65,
give.treat = gv.trt,
treat.start = treat.strt,
treat.stop = treat.stp.b,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = yr.start.VC,
vector.control.duration = vc.duration,
vector.control.efficacy = 0.7,
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
run_equilibrium = TRUE,
equilibrium,
print_progress = TRUE)
devtools::load_all()
debugonce(ep.equi.sim)
output.test <- ep.equi.sim(time.its = timesteps,
ABR = 43540,
N.in = 440,
treat.timing = treat.timing.scenarioB.in,
treat.prob = 0.65,
give.treat = gv.trt,
treat.start = treat.strt,
treat.stop = treat.stp.b,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = yr.start.VC,
vector.control.duration = vc.duration,
vector.control.efficacy = 0.7,
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
kM.const.toggle = FALSE,
run_equilibrium = TRUE,
equilibrium,
print_progress = TRUE)
kmf
debugonce(ep.equi.sim)
output.test <- ep.equi.sim(time.its = timesteps,
ABR = 43540,
N.in = 440,
treat.timing = treat.timing.scenarioB.in,
treat.prob = 0.65,
give.treat = gv.trt,
treat.start = treat.strt,
treat.stop = treat.stp.b,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = yr.start.VC,
vector.control.duration = vc.duration,
vector.control.efficacy = 0.7,
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
kM.const.toggle = TRUE,
run_equilibrium = TRUE,
equilibrium,
print_progress = TRUE)
kmf
devtools::load_all()
output.test <- ep.equi.sim(time.its = timesteps,
ABR = 43540,
N.in = 440,
treat.timing = treat.timing.scenarioB.in,
treat.prob = 0.65,
give.treat = gv.trt,
treat.start = treat.strt,
treat.stop = treat.stp.b,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = yr.start.VC,
vector.control.duration = vc.duration,
vector.control.efficacy = 0.7,
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
kM.const.toggle = TRUE,
run_equilibrium = TRUE,
equilibrium,
print_progress = TRUE)
names(output.test)
tme <- seq(1, 132*366-1)/366
plot(tme, output.test$ABR_recorded, type = 'l', xlab = 'time (years)', ylab = 'ABR', ylim = c(0, 50000))
plot(tme, output.test$ABR_recorded, type = 'l', xlab = 'time (years)', ylab = 'ABR', ylim = c(0, 50000))
plot(tme, output.test$mf_prev, type = 'l', xlab = 'time (years)', ylab = 'microfilarial prevalence', ylim = c(0, 1))
plot(tme, output.test$mf_prev, type = 'l', xlab = 'time (years)', ylab = 'microfilarial prevalence', ylim = c(0, 1), xlim = c(67,132), xaxt = "n")
axis(1, at = seq(67, 132, by = 1), las=2)
1989-80
yrs_tme <- seq(1909, 240, 2)
yrs_tme <- seq(1909, 2040, 2)
plot(yrs_tme, output.test$ABR_recorded, type = 'l', xlab = 'time (years)', ylab = 'ABR', ylim = c(0, 50000))
length(tme)
48311/366
2040 - 131.9973
yrs_tme <- seq(1908.003, 2040, 1/366)
length(yrs_tme)
plot(yrs_tme, output.test$ABR_recorded, type = 'l', xlab = 'time (years)', ylab = 'ABR', ylim = c(0, 50000))
plot(yrs_tme, output.test$ABR_recorded, type = 'l', xlab = 'time (years)', ylab = 'ABR', ylim = c(0, 50000))
plot(yrs_tme, output.test$mf_prev, type = 'l', xlab = 'time (years)', ylab = 'microfilarial prevalence', ylim = c(0, 1))
axis(1, at = seq(1977, 2040, by = 1), las=2)
plot(yrs_tme, output.test$mf_prev, type = 'l', xlab = 'Year', ylab = 'microfilarial prevalence', ylim = c(0, 1), xlim = c(1977,2040), xaxt = "n")
axis(1, at = seq(1977, 2040, by = 1), las=2)
abline(v=1989, col="blue")
plot(yrs_tme, output.test$mf_prev, type = 'l', xlab = 'Year', ylab = 'microfilarial prevalence', ylim = c(0, 1), xlim = c(1977,2040), xaxt = "n")
axis(1, at = seq(1977, 2040, by = 1), las=2)
abline(v=1989, col="blue")
abline(v=2024, col="purple")
timesteps = total.no.yrs # should be 132 yrs each scenario
treat.strt = 81;
treat.stp.a = total.no.yrs # run to 2040 (i.e. start at 80yrs + 52 yrs)
treat.stp.b =  total.no.yrs # run to 2040 (i.e. start at 80yrs + 52 yrs) but will bennial freq
treat.stp.c = 81 + length(treat.timing.hist.yrs.in)
gv.trt = 1
total.no.yrs <- 81 + length(treat.timing.scenarioA.in)
timing.yrs.VC <- c(1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988)
no.yrs.VC <- length(timing.yrs.VC)
yr.start.VC <- 81 - no.yrs.VC
timing.yrs.VC.MDA <- c(1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
2001, 2002)
vc.duration <- length(c(timing.yrs.VC, timing.yrs.VC.MDA))
# ================ #
# INPUTS FOR MODEL #
timesteps = total.no.yrs # should be 132 yrs each scenario
timesteps
total.no.yrs <- 81 + length(treat.timing.scenarioA.in)
timing.yrs.VC <- c(1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988)
no.yrs.VC <- length(timing.yrs.VC)
yr.start.VC <- 81 - no.yrs.VC
timing.yrs.VC.MDA <- c(1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
2001, 2002)
vc.duration <- length(c(timing.yrs.VC, timing.yrs.VC.MDA))
total.no.yrs
2040 - 133
1907 + 80
# for scenario 2: biennial MDA switch from 2024 to 2040 (last round 2039, measure at 2040)
treat.timing.cont.scenarioB.in <- seq(36, 36 + no.yrs.MDA.scenarioA, 2) # make seq from 36 to 2040 for scenario X
treat.timing.scenarioB.in <- c(treat.timing.hist.in, treat.timing.cont.scenarioB.in) # combine historical & scneario A MDA freq
# figure out total years from end of equilibrium run ( from 1989 when MDA begins)
total.no.yrs <- 80 + length(treat.timing.scenarioA.in)
timing.yrs.VC <- c(1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988)
no.yrs.VC <- length(timing.yrs.VC)
yr.start.VC <- 80 - no.yrs.VC
timing.yrs.VC.MDA <- c(1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
2001, 2002)
vc.duration <- length(c(timing.yrs.VC, timing.yrs.VC.MDA))
# ================ #
# INPUTS FOR MODEL #
timesteps = total.no.yrs # should be 132 yrs each scenario
treat.strt = 81;
treat.stp.a = total.no.yrs # run to 2040 (i.e. start at 80yrs + 52 yrs)
treat.stp.b =  total.no.yrs # run to 2040 (i.e. start at 80yrs + 52 yrs) but will bennial freq
treat.stp.c = 81 + length(treat.timing.hist.yrs.in)
gv.trt = 1
# other inputs required to make dataframe for iters #
DT.in <- 1/366 #timestep must be one day
timesteps.iter <- round(total.no.yrs / (DT.in )) #final duration (10 here is 10 years after treatment stops to run model)
output.test <- ep.equi.sim(time.its = timesteps,
ABR = 43540,
N.in = 440,
treat.timing = treat.timing.scenarioB.in,
treat.prob = 0.65,
give.treat = gv.trt,
treat.start = treat.strt,
treat.stop = treat.stp.b,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = yr.start.VC,
vector.control.duration = vc.duration,
vector.control.efficacy = 0.7,
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
kM.const.toggle = TRUE,
run_equilibrium = TRUE,
equilibrium,
print_progress = TRUE)
names(output.test)
tme <- seq(1, 132*366-1)/366
plot(tme, output.test$ABR_recorded, type = 'l', xlab = 'time (years)', ylab = 'ABR', ylim = c(0, 50000))
# length(tme)
# 48311/366
# 2040 - 131.9973 = 1908.003
yrs_tme <- seq(1908.003, 2040, 1/366)
plot(yrs_tme, output.test$ABR_recorded, type = 'l', xlab = 'Year ', ylab = 'ABR', ylim = c(0, 50000))
plot(yrs_tme, output.test$mf_prev, type = 'l', xlab = 'Year', ylab = 'microfilarial prevalence', ylim = c(0, 1))
plot(yrs_tme, output.test$mf_prev, type = 'l', xlab = 'Year', ylab = 'microfilarial prevalence', ylim = c(0, 1), xlim = c(1977,2040), xaxt = "n")
axis(1, at = seq(1977, 2040, by = 1), las=2)
abline(v=1989, col="blue")
abline(v=2024, col="purple")
timesteps = round(132 / (DT.in )) #final duration (10 here is 10 years after treatment stops to run model)
model_its <- timesteps - 1 # this should be number of timesteps (length of model output)
repeats   <- 200 # this should be number of times repeat a par combo (e.g., 100)
number_repeats <- 200 # or this ? (same as repeats)
abr30 <- 258
abr50 <- 511
#abr60 <- 878
abr70 <- 1730
abr90 <- 43540
abr <- c(abr30, abr50, abr60, abr70)
abr <- c(abr30, abr50, abr70, abr90)
num_repeats_each_ABR <- 200 # number of times repeat each ABR input
tot_abr <- rep(abr, each = num_repeats_each_ABR) # vector of all ABR values to test
k_e <- 0.3 # 3rd par
tot_k_e <- rep(k_e_vec, each = num_repeats_each_ABR)
inds_reps <- rep(seq(1, num_repeats_each_ABR), length(tot_abr)/num_repeats_each_ABR) # repeating sequence of 1: num repeats, number of combo times
tot_k_e <- rep(k_e, each = num_repeats_each_ABR)
tot_k_e <- rep(k_e, each = num_repeats_each_ABR * 4)
inds_reps <- rep(seq(1, num_repeats_each_ABR), length(tot_abr)/num_repeats_each_ABR) # repeating sequence of 1: num repeats, number of combo times
tot_parms <- as.data.frame(cbind(abr = tot_abr, k_e = tot_k_e))
View(tot_parms)
tot_parms2 <- unique(tot_parms[,c('abr','k_e')])
View(tot_parms2)
View(tot_parms2)
tot_parms2$mf_prev <- c('mf_prev_30', 'mf_prev_50', 'mf_prev_70', 'mf_prev_90')
View(tot_parms2)
tot_param2$scenario <- as.factor("continued annual IVM") # scenario A
tot_parms2$scenario <- as.factor("continued annual IVM") # scenario A
View(tot_parms2)
test_vec <- c(1,3,46,1,3,4)
quantile(test_vec, probs = c(0))
quantile(test_vec, probs = c(1))
test_vec <- c(1,3,4,6,1,3,4)
quantile(test_vec, probs = c(1))
check_1run <- readRDS("C:/Users/mad206/OneDrive/EPIONCHO-IBM changes/HPC/original_model_runs/Outputs/run_1abr173k_e0.2cov0.8.rds")
View(check_1run)
# original model : R package testing #
cov_65_dataframe <- readRDS("C:/Users/mad206/OneDrive/EPIONCHO-IBM changes/HPC/original_model_runs/Outputs/saved_run_prev_means_cov65_Rpkgtest.rds")
View(cov_65_dataframe)
View(cov_65_dataframe)
View(cov_65_dataframe)
x<-c(1977,1977,1988,1988)
y<-c(1,0,1,0)
polygon(x, y, col = "grey")
plot(yrs_tme, output.test$mf_prev, type = 'l', xlab = 'Year', ylab = 'microfilarial prevalence', ylim = c(0, 1), xlim = c(1977,2040), xaxt = "n")
axis(1, at = seq(1977, 2040, by = 1), las=2)
abline(v=1989, col="blue")
abline(v=2024, col="purple")
x<-c(1977,1977,1988,1988)
y<-c(0,1,1,0)
polygon(x, y, col = "grey")
adjustcolor("grey", alpha.f=0.5)
plot(yrs_tme, output.test$mf_prev, type = 'l', xlab = 'Year', ylab = 'microfilarial prevalence', ylim = c(0, 1), xlim = c(1977,2040), xaxt = "n")
axis(1, at = seq(1977, 2040, by = 1), las=2)
abline(v=1989, col="blue")
abline(v=2024, col="purple")
x<-c(1977,1977,1988,1988)
y<-c(0,1,1,0)
adjustcolor("grey", alpha.f=0.5)
polygon(x, y, col = "grey")
plot(yrs_tme, output.test$mf_prev, type = 'l', xlab = 'Year', ylab = 'microfilarial prevalence', ylim = c(0, 1), xlim = c(1977,2040), xaxt = "n")
axis(1, at = seq(1977, 2040, by = 1), las=2)
abline(v=1989, col="blue")
abline(v=2024, col="purple")
x<-c(1977,1977,1988,1988)
y<-c(0,1,1,0)
#adjustcolor("grey", alpha.f=0.5)
polygon(x, y, col = adjustcolor("grey", alpha.f=0.5), border = NA)
mtext("Vector control", side=3, line=1, at=1981, col="green2") # Rotated y axis label
plot(yrs_tme, output.test$mf_prev, type = 'l', xlab = 'Year', ylab = 'microfilarial prevalence', ylim = c(0, 1), xlim = c(1977,2040), xaxt = "n")
axis(1, at = seq(1977, 2040, by = 1), las=2)
abline(v=1989, col="blue")
abline(v=2024, col="purple")
x<-c(1977,1977,1988,1988)
y<-c(0,1,1,0)
#adjustcolor("grey", alpha.f=0.5)
polygon(x, y, col = adjustcolor("grey", alpha.f=0.5), border = NA)
mtext("Vector control", side=3, line=1, at=1981, col="grey") # Rotated y axis label
plot(yrs_tme, output.test$mf_prev, type = 'l', xlab = 'Year', ylab = 'microfilarial prevalence', ylim = c(0, 1), xlim = c(1977,2040), xaxt = "n")
axis(1, at = seq(1977, 2040, by = 1), las=2)
abline(v=1989, col="blue")
abline(v=2024, col="purple")
x<-c(1977,1977,1988,1988)
y<-c(0,1,1,0)
#adjustcolor("grey", alpha.f=0.5)
polygon(x, y, col = adjustcolor("grey", alpha.f=0.5), border = NA)
mtext("Vector control", side=3, line=1, at=1981, col="darkgrey") # Rotated y axis label
mtext("Annual IVM under OCP & National control programme", side=3, line=1, at=2005, col="darkgrey") # Rotated y axis label
mtext("Switch to frequency every 2 years", side=3, line=1, at=2033, col="darkgrey") # Rotated y axis label
devtools::load_all()
output.test <- ep.equi.sim(time.its = timesteps,
ABR = 43540,
N.in = 440,
treat.timing = treat.timing.scenarioA.in,
treat.prob = 0.65,
give.treat = gv.trt,
treat.start = treat.strt,
treat.stop = treat.stp.a,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = yr.start.VC,
vector.control.duration = vc.duration,
vector.control.efficacy = 0.7,
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
kM.const.toggle = TRUE,
run_equilibrium = TRUE,
equilibrium,
print_progress = TRUE)
# ==================================== #
# specify timesteps and model duration #
# simplified intervention history for Benin scenarios :
# vector control & annual ivermectin (1977 – 1988)
# annual ivermectin (1989 – 2022) at coverage of 65% and SNA of 5%
treat.timing.hist.yrs.in <- c(1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023)
no.yrs.MDA.hist <- length(treat.timing.hist.yrs.in)
treat.timing.hist.in <- seq(1, no.yrs.MDA.hist, 1) # make seq from 1 to no.yrs of historical MDA by increments of 1
# for scenario 1: continued annual MDA to 2040 (last round 2039, measure at 2040)
treat.timing.scenarioA.yrs.in <- c(2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
2035, 2036, 2037, 2038, 2039)
no.yrs.MDA.scenarioA <- length(treat.timing.scenarioA.yrs.in)
treat.timing.cont.scenarioA.in <- seq(36, 36 + no.yrs.MDA.scenarioA, 1) # make seq from 36 to 2040 for scenario X
treat.timing.scenarioA.in <- c(treat.timing.hist.in, treat.timing.cont.scenarioA.in) # combine historical & scneario A MDA freq
# for scenario 2: biennial MDA switch from 2024 to 2040 (last round 2039, measure at 2040)
treat.timing.cont.scenarioB.in <- seq(36, 36 + no.yrs.MDA.scenarioA, 2) # make seq from 36 to 2040 for scenario X
treat.timing.scenarioB.in <- c(treat.timing.hist.in, treat.timing.cont.scenarioB.in) # combine historical & scneario A MDA freq
# figure out total years from end of equilibrium run ( from 1989 when MDA begins)
total.no.yrs <- 80 + length(treat.timing.scenarioA.in)
timing.yrs.VC <- c(1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988)
no.yrs.VC <- length(timing.yrs.VC)
yr.start.VC <- 80 - no.yrs.VC
timing.yrs.VC.MDA <- c(1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
2001, 2002)
vc.duration <- length(c(timing.yrs.VC, timing.yrs.VC.MDA))
# ================ #
# INPUTS FOR MODEL #
timesteps = total.no.yrs # should be 132 yrs each scenario
treat.strt = 81;
treat.stp.a = total.no.yrs # run to 2040 (i.e. start at 80yrs + 52 yrs)
treat.stp.b =  total.no.yrs # run to 2040 (i.e. start at 80yrs + 52 yrs) but will bennial freq
treat.stp.c = 81 + length(treat.timing.hist.yrs.in)
gv.trt = 1
# other inputs required to make dataframe for iters #
DT.in <- 1/366 #timestep must be one day
timesteps.iter <- round(total.no.yrs / (DT.in )) #final duration (10 here is 10 years after treatment stops to run model)
#=============================================================================================================== #
#             Setting up runs for different endemic equilibrium prevalence's (ABR x k_E = 0.3 combos)            #
# for model where kM is set to a constant (15) (for kE values of 0.3 and associated DD pars)
abr30 <- 258
abr50 <- 511
#abr60 <- 878
abr70 <- 1730
abr90 <- 43540
abr <- c(abr30, abr50, abr70, abr90)
num_repeats_each_ABR <- 200 # number of times repeat each ABR input
tot_abr <- rep(abr, each = num_repeats_each_ABR) # vector of all ABR values to test
k_e <- 0.3 # 3rd par
tot_k_e <- rep(k_e, each = num_repeats_each_ABR * 4)
inds_reps <- rep(seq(1, num_repeats_each_ABR), length(tot_abr)/num_repeats_each_ABR) # repeating sequence of 1: num repeats, number of combo times
temp_tot_parms <- data.frame(Var1 = tot_abr, Var2 = tot_k_e)
dH0_kE0.3 <- rep(0.186, 800)
dHinf_kE0.3 <- rep(0.003, 800)
cH_kE0.3 <- rep(0.005, 800)
temp_tot_parms$Var3 <- dH0_kE0.3
temp_tot_parms$Var4 <- dHinf_kE0.3
temp_tot_parms$Var5 <- cH_kE0.3
# for parameter df with intervention cov 1
temp_tot_parms1 <- temp_tot_parms
temp_tot_parms1$Var6 <- 0.65 # coverage = 65 %
temp_tot_parms1$Var7 <- 0.05 # SNA = 5%
# for parameter df with intervention cov 2
temp_tot_parms2 <- temp_tot_parms
temp_tot_parms2$Var6 <- 0.8 # coverage = 80%
temp_tot_parms2$Var7 <- 0.01 # SNA = 1%
# recombine into one master dataframe
tot_parms <- rbind(temp_tot_parms1, temp_tot_parms2)
output <- ep.equi.sim(time.its = timesteps,
ABR = abr_to_run,
N.in = 440,
treat.timing = treat.timing.scenarioA.in,
treat.prob = cov_to_run,
give.treat = gv.trt,
treat.start = treat.strt,
treat.stop = treat.stp.a,
pnc = sna_to_run,
min.mont.age = 5,
vector.control.strt = yr.start.VC,
vector.control.duration = vc.duration,
vector.control.efficacy = 0.7,
delta.hz.in = dH0_to_run,
delta.hinf.in = dHinf_to_run,
c.h.in = cH_to_run,
gam.dis.in = k_to_run,
run_equilibrium = TRUE,
equilibrium,
print_progress = TRUE)
devtools::load_all()
output.test <- ep.equi.sim(time.its = timesteps,
ABR = 43540,
N.in = 440,
treat.timing = treat.timing.scenarioA.in,
treat.prob = 0.65,
give.treat = gv.trt,
treat.start = treat.strt,
treat.stop = treat.stp.a,
pnc = 0.05,
min.mont.age = 5,
vector.control.strt = yr.start.VC,
vector.control.duration = vc.duration,
vector.control.efficacy = 0.7,
delta.hz.in = 0.186,
delta.hinf.in = 0.003,
c.h.in = 0.005,
gam.dis.in = 0.3,
kM.const.toggle = TRUE,
run_equilibrium = TRUE,
equilibrium,
print_progress = TRUE)
