DT.in <- 1/366 #timestep must be one day
treat.len <- 0 #treatment duration in years
treat.strt  = round(100 / (DT.in ))
treat.stp = treat.strt + round(treat.len / (DT.in )) #treatment start and stop
timesteps = treat.stp + round(0/ (DT.in )) #final duration (25 years with no interventions)
timesteps/366
DT.in <- 1/366 #timestep must be one day
treat.len <- 0 #treatment duration in years
treat.strt  = round(100 / (DT.in ))
treat.stp = treat.strt + round(treat.len / (DT.in )) #treatment start and stop
timesteps = treat.stp + round(0/ (DT.in )) #final duration (25 years with no interventions)
# time.its <- round(time.its / (DT))
# timesteps <- 100
# ========================================================== #
# specify certain objects for loop (not previously specified)
model_its <- timesteps # this should be number of timesteps (length of model output)
model_its_blind <- timesteps + 731
repeats   <- 1000 # this should be number of times repeat a par combo (e.g., 100)
#repeats   <- 3 # this should be number of times repeat a par combo (e.g., 100)
#number_repeats <- 3 # or this ? (same as repeats)
number_repeats <- 1000
model_its_blind/366
model_its/366
mean_prevvals <- readRDS("C:/Users/mad206/OneDrive - Imperial College London/NTD-MC current/EPIONCH-IBM BoD/Blindness code/mean model runs/saved_run_meanval_allmorbidity.rds")
View(mean_prevvals)
library(haven)
murdoch_data <- read_dta('C:/Users/mad206/OneDrive/EPIONCH-IBM BoD/Skin disease/Murdoch data/pntd.0005489.s001 (1).dta')
murdoch_data2 <- murdoch_data[!is.na(murdoch_data$mfbin),]
library(dplyr)
library(haven)
murdoch_data <- read_dta('C:/Users/mad206/OneDrive/EPIONCH-IBM BoD/Skin disease/Murdoch data/pntd.0005489.s001 (1).dta')
murdoch_data2 <- murdoch_data[!is.na(murdoch_data$mfbin),]
library(dplyr)
library(binom)
murdoch_data2 <- murdoch_data2 %>%
mutate(
#create categories
age_cat = dplyr::case_when(
age >= 0 & age < 2 ~ "0 - 1",
age >= 2 & age < 5 ~ "2 - 4",
age >= 5 & age < 10 ~ "5 - 9",
age >= 10 & age < 20 ~ "10 - 19",
age >= 20 & age < 30 ~ "20 - 29",
age >= 30 & age < 50 ~ "30 - 49",
age >= 50 & age <= 80 ~ "50 - 80",
age > 80 ~ "> 80"
),
# convert to factor
age_cat = factor(
age_cat,
level = c("0 - 1","2 - 4", "5 - 9", "10 - 19", "20 - 29", "30 - 49", "50 - 80", "> 80")
)
)
murdoch_data2_endemic <- subset(murdoch_data2, mesonon == 1)
murdoch_data2_nonendemic <- subset(murdoch_data2, mesonon == 0)
SI_age_prop <- murdoch_data2_endemic %>%
group_by(age_cat) %>%
summarise(x = sum(itching),
n = n(),
prop = sum(itching)/n())
SI_age_prop_nonend <- murdoch_data2_nonendemic %>%
group_by(age_cat) %>%
summarise(x_nend = sum(itching),
n_nend = n(),
prop_nend = sum(itching)/n())
SI_df <- data.frame(age_cat = SI_age_prop$age_cat, x_nend = SI_age_prop_nonend$x_nend, n_nend = SI_age_prop_nonend$n_nend,
prop_nend = SI_age_prop_nonend$prop_nend, x = SI_age_prop$x, n = SI_age_prop$n, prop = SI_age_prop$prop)
SI_df$adj_prop <- SI_df$prop - SI_df$prop_nend
SI_df$adj_prop <- ifelse(SI_df$adj_prop < 0, 0, SI_df$adj_prop)
SI_df$x_adj <- SI_df$n * SI_df$adj_prop
SI_df$x_adj_rnd <- round(SI_df$x_adj)
SI_CI <- binom.confint(x = SI_df$x_adj_rnd, n = SI_df$n, conf.level = 0.95, methods = "exact")
SI_df$lower <- SI_CI$lower
SI_df$upper <- SI_CI$upper
SI_df$prop_check <- SI_CI$mean
SI_df$sequela <- as.factor("severe itching")
# =========== #
# APOD       #
#meso <- subset(murdoch_data2, atrophy == 1 & age < 50 & mesonon == 1)
# atrp_age_prop_test <- murdoch_data2_endemic %>%
#   group_by(atrophy, age_cat) %>%
#   summarise(n = n()) %>%
#   mutate(freq = n / sum(n))
APOD_age_prop <- murdoch_data2_endemic %>%
group_by(age_cat) %>%
summarise(x = sum(apod),
n = n(),
prop = sum(apod)/n())
APOD_age_prop_nonend <- murdoch_data2_nonendemic %>%
group_by(age_cat) %>%
summarise(x_nend = sum(apod),
n_nend = n(),
prop_nend = sum(apod)/n())
APOD_df <- data.frame(age_cat = APOD_age_prop$age_cat, x_nend = APOD_age_prop_nonend$x_nend, n_nend = APOD_age_prop_nonend$n_nend,
prop_nend = APOD_age_prop_nonend$prop_nend, x = APOD_age_prop$x, n = APOD_age_prop$n, prop = APOD_age_prop$prop)
APOD_df$adj_prop <- APOD_df$prop - APOD_df$prop_nend
APOD_df$adj_prop <- ifelse(APOD_df$adj_prop < 0, 0, APOD_df$adj_prop)
APOD_df$x_adj <- APOD_df$n * APOD_df$adj_prop
APOD_df$x_adj_rnd <- round(APOD_df$x_adj)
APOD_CI <- binom.confint(x = APOD_df$x_adj_rnd, n = APOD_df$n, conf.level = 0.95, methods = "exact")
APOD_df$lower <- APOD_CI$lower
APOD_df$upper <- APOD_CI$upper
APOD_df$prop_check <- APOD_CI$mean
#APOD_df$sequela1 <- as.factor("APOD")
APOD_df$sequela <- as.factor("RSD")
# =========== #
# CPOD       #
#meso <- subset(murdoch_data2, atrophy == 1 & age < 50 & mesonon == 1)
# atrp_age_prop_test <- murdoch_data2_endemic %>%
#   group_by(atrophy, age_cat) %>%
#   summarise(n = n()) %>%
#   mutate(freq = n / sum(n))
CPOD_age_prop <- murdoch_data2_endemic %>%
group_by(age_cat) %>%
summarise(x = sum(cpod),
n = n(),
prop = sum(cpod)/n())
CPOD_age_prop_nonend <- murdoch_data2_nonendemic %>%
group_by(age_cat) %>%
summarise(x_nend = sum(cpod),
n_nend = n(),
prop_nend = sum(cpod)/n())
CPOD_df <- data.frame(age_cat = CPOD_age_prop$age_cat, x_nend = CPOD_age_prop_nonend$x_nend, n_nend = CPOD_age_prop_nonend$n_nend,
prop_nend = CPOD_age_prop_nonend$prop_nend, x = CPOD_age_prop$x, n = CPOD_age_prop$n, prop = CPOD_age_prop$prop)
CPOD_df$adj_prop <- CPOD_df$prop - CPOD_df$prop_nend
CPOD_df$adj_prop <- ifelse(CPOD_df$adj_prop < 0, 0, CPOD_df$adj_prop)
CPOD_df$x_adj <- CPOD_df$n * CPOD_df$adj_prop
CPOD_df$x_adj_rnd <- round(CPOD_df$x_adj)
CPOD_CI <- binom.confint(x = CPOD_df$x_adj_rnd, n = CPOD_df$n, conf.level = 0.95, methods = "exact")
CPOD_df$lower <- CPOD_CI$lower
CPOD_df$upper <- CPOD_CI$upper
CPOD_df$prop_check <- CPOD_CI$mean
#CPOD_df$sequela1 <- as.factor("CPOD")
CPOD_df$sequela <- as.factor("RSD")
# =========== #
#   LOD       #
#meso <- subset(murdoch_data2, atrophy == 1 & age < 50 & mesonon == 1)
# atrp_age_prop_test <- murdoch_data2_endemic %>%
#   group_by(atrophy, age_cat) %>%
#   summarise(n = n()) %>%
#   mutate(freq = n / sum(n))
LOD_age_prop <- murdoch_data2_endemic %>%
group_by(age_cat) %>%
summarise(x = sum(lod),
n = n(),
prop = sum(lod)/n())
LOD_age_prop_nonend <- murdoch_data2_nonendemic %>%
group_by(age_cat) %>%
summarise(x_nend = sum(lod),
n_nend = n(),
prop_nend = sum(lod)/n())
LOD_df <- data.frame(age_cat = LOD_age_prop$age_cat, x_nend = LOD_age_prop_nonend$x_nend, n_nend = LOD_age_prop_nonend$n_nend,
prop_nend = LOD_age_prop_nonend$prop_nend, x = LOD_age_prop$x, n = LOD_age_prop$n, prop = LOD_age_prop$prop)
LOD_df$adj_prop <- LOD_df$prop - LOD_df$prop_nend
LOD_df$adj_prop <- ifelse(LOD_df$adj_prop < 0, 0, LOD_df$adj_prop)
LOD_df$x_adj <- LOD_df$n * LOD_df$adj_prop
LOD_df$x_adj_rnd <- round(LOD_df$x_adj)
LOD_CI <- binom.confint(x = LOD_df$x_adj_rnd, n = LOD_df$n, conf.level = 0.95, methods = "exact")
LOD_df$lower <- LOD_CI$lower
LOD_df$upper <- LOD_CI$upper
LOD_df$prop_check <- LOD_CI$mean
#LOD_df$sequela1 <- as.factor("LOD")
LOD_df$sequela <- as.factor("RSD")
murdoch_data2_endemic$rsd <- ifelse(murdoch_data2_endemic$apod == 1 | murdoch_data2_endemic$cpod == 1 | murdoch_data2_endemic$lod == 1, 1, 0)
murdoch_data2_nonendemic$rsd <- ifelse(murdoch_data2_nonendemic$apod == 1 | murdoch_data2_nonendemic$cpod == 1 | murdoch_data2_nonendemic$lod == 1, 1, 0)
RSD_age_prop <- murdoch_data2_endemic %>%
group_by(age_cat) %>%
summarise(x = sum(rsd),
n = n(),
prop = sum(rsd)/n())
RSD_age_prop_nonend <- murdoch_data2_nonendemic %>%
group_by(age_cat) %>%
summarise(x_nend = sum(rsd),
n_nend = n(),
prop_nend = sum(rsd)/n())
RSD_df <- data.frame(age_cat = RSD_age_prop$age_cat, x_nend = RSD_age_prop_nonend$x_nend, n_nend = RSD_age_prop_nonend$n_nend,
prop_nend = RSD_age_prop_nonend$prop_nend, x = RSD_age_prop$x, n = RSD_age_prop$n, prop = RSD_age_prop$prop)
RSD_df$adj_prop <- RSD_df$prop - RSD_df$prop_nend
RSD_df$adj_prop <- ifelse(RSD_df$adj_prop < 0, 0, RSD_df$adj_prop)
RSD_df$x_adj <- RSD_df$n * RSD_df$adj_prop
RSD_df$x_adj_rnd <- round(RSD_df$x_adj)
RSD_CI <- binom.confint(x = RSD_df$x_adj_rnd, n = RSD_df$n, conf.level = 0.95, methods = "exact")
RSD_df$lower <- RSD_CI$lower
RSD_df$upper <- RSD_CI$upper
RSD_df$prop_check <- RSD_CI$mean
RSD_df$sequela <- as.factor("RSD")
sequela_df_ageprev <- rbind(SI_df, RSD_df)
sequela_df_ageprev_subset <- subset(sequela_df_ageprev, age_cat != "> 80")
APOD_df1 <- subset(APOD_df, age_cat != "> 80")
CPOD_df1 <- subset(CPOD_df, age_cat != "> 80")
LOD_df1 <- subset(LOD_df, age_cat != "> 80")
require(ggplot2)
base_plot <- ggplot(data = sequela_df_ageprev_subset, aes(x = age_cat, y = adj_prop*100, group = sequela))+
geom_line()+
geom_point()+
geom_errorbar(aes(ymin=lower*100, ymax=upper*100), width = 0.2)+
facet_wrap(~sequela)+
theme_bw()
base_plot_APOD <- base_plot +
geom_line(data = APOD_df1, aes(x = age_cat, y = adj_prop*100, group = sequela), colour = "brown", alpha = 0.5)+
geom_point(data = APOD_df1, aes(x = age_cat, y = adj_prop*100, group = sequela), colour = "brown", alpha = 0.5)+
geom_errorbar(data = APOD_df1, aes(ymin=lower*100, ymax=upper*100), width = 0.2, colour = "brown", alpha = 0.5)+
facet_wrap(~sequela)
base_plot_CPOD <- base_plot_APOD +
geom_line(data = CPOD_df1, aes(x = age_cat, y = adj_prop*100, group = sequela), colour = "purple", alpha = 0.5)+
geom_point(data = CPOD_df1, aes(x = age_cat, y = adj_prop*100, group = sequela), colour = "purple", alpha = 0.5)+
geom_errorbar(data = CPOD_df1, aes(ymin=lower*100, ymax=upper*100), width = 0.2, colour = "purple", alpha = 0.5)+
facet_wrap(~sequela)
base_plot_CPOD +
geom_line(data = LOD_df1, aes(x = age_cat, y = adj_prop*100, group = sequela), colour = "orange", alpha = 0.5)+
geom_point(data = LOD_df1, aes(x = age_cat, y = adj_prop*100, group = sequela), colour = "orange", alpha = 0.5)+
geom_errorbar(data = LOD_df1, aes(ymin=lower*100, ymax=upper*100), width = 0.2, colour = "orange", alpha = 0.5)+
ylab("Adjusted prevalence (%)")+
xlab("Age categories (years)")+
facet_wrap(~sequela)
base_plot_CPOD +
geom_line(data = LOD_df1, aes(x = age_cat, y = adj_prop*100, group = sequela), colour = "orange", alpha = 0.5)+
geom_point(data = LOD_df1, aes(x = age_cat, y = adj_prop*100, group = sequela), colour = "orange", alpha = 0.5)+
geom_errorbar(data = LOD_df1, aes(ymin=lower*100, ymax=upper*100), width = 0.2, colour = "orange", alpha = 0.5)+
ylab("Adjusted prevalence (%)")+
xlab("Age categories (years)")+
#facet_wrap(~sequela)
facet_wrap(~sequela, scales = "free_y")
murdoch_data2$rsd <- ifelse(murdoch_data2$apod == 1 | murdoch_data2$cpod == 1 | murdoch_data2$lod == 1, 1, 0)
RSD1 <- subset(murdoch_data2, rsd == 1 )
rsd_pos_df <- RSD1 %>%
group_by(rsd , mfbin) %>%
summarize(Freq=n())
RSD0 <- subset(murdoch_data2, rsd == 0 )
rsd_neg_df <- RSD0 %>%
group_by(rsd , mfbin) %>%
summarize(Freq=n())
rsd_combined <- cbind(rsd_pos_df, rsd_neg_df)
rsd_combined$tot <- rsd_combined$Freq...3 + rsd_combined$Freq...6
rsd_combined$prop <- rsd_combined$Freq...3 / rsd_combined$tot
rsd_combined$mf <- ifelse(rsd_combined$mfbin...2 == 0, 0,
ifelse(rsd_combined$mfbin...2 == 1, 5,
ifelse(rsd_combined$mfbin...2 == 2, 30,
ifelse(rsd_combined$mfbin...2 == 3, 75, 200))))
fit_rsd <- glm(prop ~ log(mf + 1), family = gaussian(link = "log"),
data = rsd_combined)
# fitted logarithmic relationship between prob OAE ~ mean mf load;
# generalized linear model with log-link function
newdat <- data.frame(mf = seq(0, 1000, 1)) # generate new dataframe with mf counts from 0 to 1000 by 1
out_rsd <- predict(fit_rsd, newdata = newdat, se.fit = T) # use predict function to calculate log(OAE prob) for each mean mf count in newdat
logpred_rsd <- data.frame(fit = out_rsd$fit, se = out_rsd$se.fit, mf = newdat$mf) # create dataframe with predicted log(OAE probs), standard error and mf counts
logpred_rsd <- within(logpred_rsd, {
lwr <- fit - 1.96 * se
upr <- fit + 1.96 * se
}) # calculate lwr and upper confidence intervals for log(OAE probs)
pred_rsd <- data.frame(fit = exp(logpred_rsd$fit), lwr = exp(logpred_rsd$lwr), upr = exp(logpred_rsd$upr), mf = logpred_rsd$mf) # exponentiate probabilities
pred_rsd$sequela <- as.factor("RSD")
#Atrp_probs <- pred$fit # extract probabilities into a vector
require(ggplot2)
ggplot()+
geom_line(data = pred_rsd , aes(x=mf, y=fit), colour = "red")+
geom_line(data = pred_rsd , aes(x=mf, y = lwr), linetype = "dashed")+
geom_line(data = pred_rsd , aes(x=mf, y = upr), linetype = "dashed")+
geom_point( data = rsd_combined, aes(x=mf, y = prop))+
ylab("RSD probability")+
xlim(0,200)+
ylim(0,0.4)+
theme_bw()
# ===============================#
#   stratify by (meso)endemic    #
#murdoch_data2$rsd <- ifelse(murdoch_data2$apod == 1 | murdoch_data2$cpod == 1 | murdoch_data2$lod == 1, 1, 0)
murdoch_data2$rsd <- ifelse(murdoch_data2$apod == 1 | murdoch_data2$cpod == 1 | murdoch_data2$lod == 1, 1, 0)
rsd1_meso <- subset(murdoch_data2, rsd == 1 & mesonon == 1)
rsd_pos_df_meso <- rsd1_meso %>%
group_by(rsd , mfbin) %>%
summarize(Freq=n())
rsd0_meso <- subset(murdoch_data2, rsd == 0 & mesonon == 1)
rsd_neg_df_meso <- rsd0_meso %>%
group_by(rsd , mfbin) %>%
summarize(Freq=n())
rsd_combined_meso <- cbind(rsd_pos_df_meso, rsd_neg_df_meso)
rsd_combined_meso$tot <- rsd_combined_meso$Freq...3 + rsd_combined_meso$Freq...6
rsd_combined_meso$prop <- rsd_combined_meso$Freq...3 / rsd_combined_meso$tot
rsd_combined_meso$mf <- ifelse(rsd_combined_meso$mfbin...2 == 0, 0,
ifelse(rsd_combined_meso$mfbin...2 == 1, 5,
ifelse(rsd_combined_meso$mfbin...2 == 2, 30,
ifelse(rsd_combined_meso$mfbin...2 == 3, 75, 200))))
# divide prob by age
rsd_combined_meso$avg_age <- avgage_mfbin_df_meso$age
# ================================================== #
# average age in each mf bin to divide probabilities #
meso_df <- subset(murdoch_data2, mesonon == 1)
#meso_df <- subset(murdoch_data2, mesonon == 1 & atrophy == 1 & mfbin > 0)
avgage_mfbin_df_meso <- aggregate(age ~ mfbin, data = meso_df, FUN = mean)
#]avgage_mfbin_df_meso <- aggregate(age ~ mfbin, data = meso_df, FUN = function(x) c(Average = mean(x), Count = length(x)))
atrophy_combined_meso$avg_age <- avgage_mfbin_df_meso$age
murdoch_data2$rsd <- ifelse(murdoch_data2$apod == 1 | murdoch_data2$cpod == 1 | murdoch_data2$lod == 1, 1, 0)
RSD1 <- subset(murdoch_data2, rsd == 1 )
rsd_pos_df <- RSD1 %>%
group_by(rsd , mfbin) %>%
summarize(Freq=n())
RSD0 <- subset(murdoch_data2, rsd == 0 )
rsd_neg_df <- RSD0 %>%
group_by(rsd , mfbin) %>%
summarize(Freq=n())
rsd_combined <- cbind(rsd_pos_df, rsd_neg_df)
rsd_combined$tot <- rsd_combined$Freq...3 + rsd_combined$Freq...6
rsd_combined$prop <- rsd_combined$Freq...3 / rsd_combined$tot
rsd_combined$mf <- ifelse(rsd_combined$mfbin...2 == 0, 0,
ifelse(rsd_combined$mfbin...2 == 1, 5,
ifelse(rsd_combined$mfbin...2 == 2, 30,
ifelse(rsd_combined$mfbin...2 == 3, 75, 200))))
fit_rsd <- glm(prop ~ log(mf + 1), family = gaussian(link = "log"),
data = rsd_combined)
# fitted logarithmic relationship between prob OAE ~ mean mf load;
# generalized linear model with log-link function
newdat <- data.frame(mf = seq(0, 1000, 1)) # generate new dataframe with mf counts from 0 to 1000 by 1
out_rsd <- predict(fit_rsd, newdata = newdat, se.fit = T) # use predict function to calculate log(OAE prob) for each mean mf count in newdat
logpred_rsd <- data.frame(fit = out_rsd$fit, se = out_rsd$se.fit, mf = newdat$mf) # create dataframe with predicted log(OAE probs), standard error and mf counts
logpred_rsd <- within(logpred_rsd, {
lwr <- fit - 1.96 * se
upr <- fit + 1.96 * se
}) # calculate lwr and upper confidence intervals for log(OAE probs)
pred_rsd <- data.frame(fit = exp(logpred_rsd$fit), lwr = exp(logpred_rsd$lwr), upr = exp(logpred_rsd$upr), mf = logpred_rsd$mf) # exponentiate probabilities
pred_rsd$sequela <- as.factor("RSD")
#Atrp_probs <- pred$fit # extract probabilities into a vector
require(ggplot2)
ggplot()+
geom_line(data = pred_rsd , aes(x=mf, y=fit), colour = "red")+
geom_line(data = pred_rsd , aes(x=mf, y = lwr), linetype = "dashed")+
geom_line(data = pred_rsd , aes(x=mf, y = upr), linetype = "dashed")+
geom_point( data = rsd_combined, aes(x=mf, y = prop))+
ylab("RSD probability")+
xlim(0,200)+
ylim(0,0.4)+
theme_bw()
#murdoch_data2$rsd <- ifelse(murdoch_data2$apod == 1 | murdoch_data2$cpod == 1 | murdoch_data2$lod == 1, 1, 0)
murdoch_data2$rsd <- ifelse(murdoch_data2$apod == 1 | murdoch_data2$cpod == 1 | murdoch_data2$lod == 1, 1, 0)
rsd1_meso <- subset(murdoch_data2, rsd == 1 & mesonon == 1)
rsd_pos_df_meso <- rsd1_meso %>%
group_by(rsd , mfbin) %>%
summarize(Freq=n())
rsd0_meso <- subset(murdoch_data2, rsd == 0 & mesonon == 1)
rsd_neg_df_meso <- rsd0_meso %>%
group_by(rsd , mfbin) %>%
summarize(Freq=n())
rsd_combined_meso <- cbind(rsd_pos_df_meso, rsd_neg_df_meso)
rsd_combined_meso$tot <- rsd_combined_meso$Freq...3 + rsd_combined_meso$Freq...6
rsd_combined_meso$prop <- rsd_combined_meso$Freq...3 / rsd_combined_meso$tot
rsd_combined_meso$mf <- ifelse(rsd_combined_meso$mfbin...2 == 0, 0,
ifelse(rsd_combined_meso$mfbin...2 == 1, 5,
ifelse(rsd_combined_meso$mfbin...2 == 2, 30,
ifelse(rsd_combined_meso$mfbin...2 == 3, 75, 200))))
# divide prob by age
rsd_combined_meso$avg_age <- avgage_mfbin_df_meso$age
rsd_combined_meso$prop_age_adj <- rsd_combined_meso$prop / rsd_combined_meso$avg_age
# ===================================== #
#   work out in non-endemic communities #
rsd1_nonend <- subset(murdoch_data2, rsd == 1 & mesonon == 0)
rsd_pos_df_nonend <- rsd1_nonend %>%
group_by(rsd) %>%
summarize(Freq=n())
rsd0_nonend <- subset(murdoch_data2, rsd == 0 & mesonon == 0)
rsd_neg_df_nonend <- rsd0_nonend %>%
group_by(rsd) %>%
summarize(Freq=n())
nonend_rsd_prop <- rsd_pos_df_nonend$Freq / (rsd_pos_df_nonend$Freq + rsd_neg_df_nonend$Freq)
nonend_rsd_prop
# divide prob by age
nonend_rsd_prop_adj_age <- nonend_rsd_prop/avg_age_nonend
# average age adjustment in non-endemic #
nonmeso_df <- subset(murdoch_data2, mesonon == 0)
avg_age_nonend <- mean(nonmeso_df$age)
#murdoch_data2$rsd <- ifelse(murdoch_data2$apod == 1 | murdoch_data2$cpod == 1 | murdoch_data2$lod == 1, 1, 0)
murdoch_data2$rsd <- ifelse(murdoch_data2$apod == 1 | murdoch_data2$cpod == 1 | murdoch_data2$lod == 1, 1, 0)
rsd1_meso <- subset(murdoch_data2, rsd == 1 & mesonon == 1)
rsd_pos_df_meso <- rsd1_meso %>%
group_by(rsd , mfbin) %>%
summarize(Freq=n())
rsd0_meso <- subset(murdoch_data2, rsd == 0 & mesonon == 1)
rsd_neg_df_meso <- rsd0_meso %>%
group_by(rsd , mfbin) %>%
summarize(Freq=n())
rsd_combined_meso <- cbind(rsd_pos_df_meso, rsd_neg_df_meso)
rsd_combined_meso$tot <- rsd_combined_meso$Freq...3 + rsd_combined_meso$Freq...6
rsd_combined_meso$prop <- rsd_combined_meso$Freq...3 / rsd_combined_meso$tot
rsd_combined_meso$mf <- ifelse(rsd_combined_meso$mfbin...2 == 0, 0,
ifelse(rsd_combined_meso$mfbin...2 == 1, 5,
ifelse(rsd_combined_meso$mfbin...2 == 2, 30,
ifelse(rsd_combined_meso$mfbin...2 == 3, 75, 200))))
# divide prob by age
rsd_combined_meso$avg_age <- avgage_mfbin_df_meso$age
rsd_combined_meso$prop_age_adj <- rsd_combined_meso$prop / rsd_combined_meso$avg_age
# ===================================== #
#   work out in non-endemic communities #
rsd1_nonend <- subset(murdoch_data2, rsd == 1 & mesonon == 0)
rsd_pos_df_nonend <- rsd1_nonend %>%
group_by(rsd) %>%
summarize(Freq=n())
rsd0_nonend <- subset(murdoch_data2, rsd == 0 & mesonon == 0)
rsd_neg_df_nonend <- rsd0_nonend %>%
group_by(rsd) %>%
summarize(Freq=n())
nonend_rsd_prop <- rsd_pos_df_nonend$Freq / (rsd_pos_df_nonend$Freq + rsd_neg_df_nonend$Freq)
nonend_rsd_prop
# divide prob by age
nonend_rsd_prop_adj_age <- nonend_rsd_prop/avg_age_nonend
nonend_rsd_prop_adj_age
# ===================================== #
#      Adjust probabilities             #
rsd_combined_meso$background_prop <- nonend_rsd_prop
rsd_combined_meso$adj_prop1 <- rsd_combined_meso$prop - rsd_combined_meso$background_prop
rsd_combined_meso$adj_prop2 <- ifelse(rsd_combined_meso$adj_prop1 < 0, 0.00000000001, rsd_combined_meso$adj_prop1)
rsd_combined_meso$adj_prop3 <- rsd_combined_meso$prop * rsd_combined_meso$background_prop
# age divisible probs #
rsd_combined_meso$background_prop_age <- nonend_rsd_prop_adj_age
rsd_combined_meso$adj_prop1_age <- rsd_combined_meso$prop_age_adj - rsd_combined_meso$background_prop_age
rsd_combined_meso$adj_prop2_age <- ifelse(rsd_combined_meso$adj_prop1_age < 0, 0.00000000001, rsd_combined_meso$adj_prop1_age)
rsd_combined_meso$sequela <- as.factor("reactive skin disease")
require(ggplot2)
ggplot()+
geom_point(data = rsd_combined_meso , aes(x=mf, y=prop), colour = "black")+
geom_point(data = rsd_combined_meso , aes(x=mf, y=adj_prop2), colour = "brown")+
geom_point(data = rsd_combined_meso , aes(x=mf, y=adj_prop3), colour = "purple")+
#geom_point( data = atrophy_combined, aes(x=mf, y = prop))+
ylab("RSD probability")+
xlim(0,200)+
ylim(0,0.4)+
theme_bw()
fit_rsd0 <- glm(prop ~ log(mf + 1), family = gaussian(link = "log"),
data = rsd_combined_meso)
# fitted logarithmic relationship between prob OAE ~ mean mf load;
# generalized linear model with log-link function
newdat <- data.frame(mf = seq(0, 1000, 1)) # generate new dataframe with mf counts from 0 to 1000 by 1
out_rsd0 <- predict(fit_rsd0, newdata = newdat, se.fit = T) # use predict function to calculate log(OAE prob) for each mean mf count in newdat
logpred_rsd0 <- data.frame(fit = out_rsd0$fit, se = out_rsd0$se.fit, mf = newdat$mf) # create dataframe with predicted log(OAE probs), standard error and mf counts
logpred_rsd0 <- within(logpred_rsd0, {
lwr <- fit - 1.96 * se
upr <- fit + 1.96 * se
}) # calculate lwr and upper confidence intervals for log(OAE probs)
pred_rsd0 <- data.frame(fit = exp(logpred_rsd0$fit), lwr = exp(logpred_rsd0$lwr), upr = exp(logpred_rsd0$upr), mf = logpred_rsd0$mf) # exponentiate probabilities
pred_rsd0$sequela <- as.factor("reactive skin disease")
# adjusted prop 1 #
fit_rsd1 <- glm(adj_prop2 ~ log(mf + 1), family = gaussian(link = "log"),
data = rsd_combined_meso)
# fitted logarithmic relationship between prob OAE ~ mean mf load;
# generalized linear model with log-link function
newdat <- data.frame(mf = seq(0, 1000, 1)) # generate new dataframe with mf counts from 0 to 1000 by 1
out_rsd1 <- predict(fit_rsd1, newdata = newdat, se.fit = T) # use predict function to calculate log(OAE prob) for each mean mf count in newdat
logpred_rsd1 <- data.frame(fit = out_rsd1$fit, se = out_rsd1$se.fit, mf = newdat$mf) # create dataframe with predicted log(OAE probs), standard error and mf counts
logpred_rsd1 <- within(logpred_rsd1, {
lwr <- fit - 1.96 * se
upr <- fit + 1.96 * se
}) # calculate lwr and upper confidence intervals for log(OAE probs)
pred_rsd1 <- data.frame(fit = exp(logpred_rsd1$fit), lwr = exp(logpred_rsd1$lwr), upr = exp(logpred_rsd1$upr), mf = logpred_rsd1$mf) # exponentiate probabilities
pred_rsd1$sequela <- as.factor("reactive skin disease")
# adjusted prop 2 #
fit_rsd2 <- glm(adj_prop3 ~ log(mf + 1), family = gaussian(link = "log"),
data = rsd_combined_meso)
# fitted logarithmic relationship between prob OAE ~ mean mf load;
# generalized linear model with log-link function
newdat <- data.frame(mf = seq(0, 1000, 1)) # generate new dataframe with mf counts from 0 to 1000 by 1
out_rsd2 <- predict(fit_rsd2, newdata = newdat, se.fit = T) # use predict function to calculate log(OAE prob) for each mean mf count in newdat
logpred_rsd2 <- data.frame(fit = out_rsd2$fit, se = out_rsd2$se.fit, mf = newdat$mf) # create dataframe with predicted log(OAE probs), standard error and mf counts
logpred_rsd2 <- within(logpred_rsd2, {
lwr <- fit - 1.96 * se
upr <- fit + 1.96 * se
}) # calculate lwr and upper confidence intervals for log(OAE probs)
pred_rsd2 <- data.frame(fit = exp(logpred_rsd2$fit), lwr = exp(logpred_rsd2$lwr), upr = exp(logpred_rsd2$upr), mf = logpred_rsd2$mf) # exponentiate probabilities
pred_rsd2$sequela <- as.factor("reactive skin disease")
# age divided probabilites (& adjusted on background probs from non-endemic communities) #
fit_rsd3 <- glm(adj_prop2_age ~ log(mf + 1), family = gaussian(link = "log"),
data = rsd_combined_meso)
# fitted logarithmic relationship between prob OAE ~ mean mf load;
# generalized linear model with log-link function
newdat <- data.frame(mf = seq(0, 1000, 1)) # generate new dataframe with mf counts from 0 to 1000 by 1
out_rsd3 <- predict(fit_rsd3, newdata = newdat, se.fit = T) # use predict function to calculate log(OAE prob) for each mean mf count in newdat
logpred_rsd3 <- data.frame(fit = out_rsd3$fit, se = out_rsd3$se.fit, mf = newdat$mf) # create dataframe with predicted log(OAE probs), standard error and mf counts
logpred_rsd3 <- within(logpred_rsd3, {
lwr <- fit - 1.96 * se
upr <- fit + 1.96 * se
}) # calculate lwr and upper confidence intervals for log(OAE probs)
pred_rsd3 <- data.frame(fit = exp(logpred_rsd3$fit), lwr = exp(logpred_rsd3$lwr), upr = exp(logpred_rsd3$upr), mf = logpred_rsd3$mf) # exponentiate probabilities
pred_rsd3$sequela <- as.factor("reactive skin disease")
require(ggplot2)
ggplot()+
geom_line(data = pred_rsd0 , aes(x=mf, y=fit), colour = "grey")+
#geom_line(data = pred_atrp0 , aes(x=mf, y = lwr),  colour = "grey", linetype = "dashed")+
#geom_line(data = pred_atrp0 , aes(x=mf, y = upr),  colour = "grey", linetype = "dashed")+
geom_point(data = rsd_combined_meso , aes(x=mf, y=prop), colour = "grey")+
geom_line(data = pred_rsd1 , aes(x=mf, y=fit), colour = "brown")+
#geom_line(data = pred_atrp1 , aes(x=mf, y = lwr),  colour = "brown", linetype = "dashed")+
#geom_line(data = pred_atrp1 , aes(x=mf, y = upr),  colour = "brown", linetype = "dashed")+
geom_point(data = rsd_combined_meso , aes(x=mf, y=adj_prop2), colour = "brown")+
geom_line(data = pred_rsd2 , aes(x=mf, y=fit), colour = "purple")+
#geom_line(data = pred_atrp2 , aes(x=mf, y = lwr),  colour = "purple", linetype = "dashed")+
#geom_line(data = pred_atrp2 , aes(x=mf, y = upr),  colour = "purple", linetype = "dashed")+
geom_point(data = rsd_combined_meso , aes(x=mf, y=adj_prop3), colour = "purple")+
ylab("RSD probability")+
xlim(0,200)+
ylim(0,0.4)+
theme_bw()
names(murdoch_data2)
#murdoch_data2$rsd <- ifelse(murdoch_data2$apod == 1 | murdoch_data2$cpod == 1 | murdoch_data2$lod == 1, 1, 0)
APOD1 <- subset(murdoch_data2, apod == 1 )
APOD_pos_df <- APOD1 %>%
group_by(apod , mfbin) %>%
summarize(Freq=n())
APOD_pos_df
APOD0 <- subset(murdoch_data2, apod == 0 )
APOD0 <- subset(murdoch_data2, apod == 0 )
APOD_neg_df <- APOD0 %>%
group_by(apod , mfbin) %>%
summarize(Freq=n())
APOD_combined <- cbind(APOD_pos_df, APOD_neg_df)
APOD_combined
View(murdoch_data)
